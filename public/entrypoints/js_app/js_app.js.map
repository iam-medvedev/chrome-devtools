{
  "version": 3,
  "sources": ["js_app.prebundle.ts", "../../panels/js_timeline/js_timeline-meta.prebundle.ts", "../../panels/mobile_throttling/mobile_throttling-meta.prebundle.ts", "../../panels/network/network-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../shell/shell.js';\nimport '../../panels/js_timeline/js_timeline-meta.js';\nimport '../../panels/mobile_throttling/mobile_throttling-meta.js';\nimport '../../panels/network/network-meta.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Sources from '../../panels/sources/sources.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Main from '../main/main.js';\n\nconst UIStrings = {\n  /**\n   * @description Text that refers to the main target.\n   */\n  main: 'Main',\n  /**\n   * @description Title of the 'Scripts' tool in the Network Navigator View, which is part of the Sources tool\n   */\n  networkTitle: 'Scripts',\n  /**\n   * @description Command for showing the 'Scripts' tool in the Network Navigator View, which is part of the Sources tool\n   */\n  showNode: 'Show Scripts',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/js_app/js_app.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet jsMainImplInstance: JsMainImpl;\nlet loadedSourcesModule: (typeof Sources|undefined);\n\nasync function loadSourcesModule(): Promise<typeof Sources> {\n  if (!loadedSourcesModule) {\n    loadedSourcesModule = await import('../../panels/sources/sources.js');\n  }\n  return loadedSourcesModule;\n}\nexport class JsMainImpl implements Common.Runnable.Runnable {\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): JsMainImpl {\n    const {forceNew} = opts;\n    if (!jsMainImplInstance || forceNew) {\n      jsMainImplInstance = new JsMainImpl();\n    }\n\n    return jsMainImplInstance;\n  }\n\n  async run(): Promise<void> {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ConnectToNodeJSDirectly);\n    void SDK.Connections.initMainConnection(async () => {\n      const target = SDK.TargetManager.TargetManager.instance().createTarget(\n          'main', i18nString(UIStrings.main), SDK.Target.Type.NODE, null);\n      void target.runtimeAgent().invoke_runIfWaitingForDebugger();\n    }, Components.TargetDetachedDialog.TargetDetachedDialog.connectionLost);\n  }\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,\n  id: 'navigator-network',\n  title: i18nLazyString(UIStrings.networkTitle),\n  commandPrompt: i18nLazyString(UIStrings.showNode),\n  order: 2,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SourcesNavigator.NetworkNavigatorView.instance();\n  },\n});\n\nCommon.Runnable.registerEarlyInitializationRunnable(JsMainImpl.instance);\nnew Main.MainImpl.MainImpl();\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Timeline from '../timeline/timeline.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for the performance of something\n   */\n  performance: 'Performance',\n  /**\n   * @description Command for showing the 'Performance' tool\n   */\n  showPerformance: 'Show Performance',\n  /**\n   * @description Title of an action in the timeline tool to show history\n   */\n  showRecentTimelineSessions: 'Show recent timeline sessions',\n  /**\n   * @description Text to record a series of actions for analysis\n   */\n  record: 'Record',\n  /**\n   * @description Text of an item that stops the running task\n   */\n  stop: 'Stop',\n  /**\n   * @description Title of an action in the timeline tool to record a reload of the current page\n   */\n  recordAndReload: 'Record and reload',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/js_timeline/js_timeline-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedTimelineModule: (typeof Timeline|undefined);\n\nasync function loadTimelineModule(): Promise<typeof Timeline> {\n  if (!loadedTimelineModule) {\n    loadedTimelineModule = await import('../timeline/timeline.js');\n  }\n  return loadedTimelineModule;\n}\n\nfunction maybeRetrieveTimelineContextTypes<T = unknown>(getClassCallBack: (timelineModule: typeof Timeline) => T[]):\n    T[] {\n  if (loadedTimelineModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedTimelineModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'timeline',\n  title: i18nLazyString(UIStrings.performance),\n  commandPrompt: i18nLazyString(UIStrings.showPerformance),\n  order: 66,\n  hasToolbar: false,\n  isPreviewFeature: true,\n  async loadView() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.TimelinePanel.instance({forceNew: null, isNode: true});\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.show-history',\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.showRecentTimelineSessions),\n  contextTypes() {\n    return maybeRetrieveTimelineContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+H',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Y',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveTimelineContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.record),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stop),\n    },\n  ],\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.record-reload',\n  iconClass: UI.ActionRegistration.IconClass.REFRESH,\n  contextTypes() {\n    return maybeRetrieveTimelineContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.recordAndReload),\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+Shift+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Shift+E',\n    },\n  ],\n});\n\n// IMPORTANT: if you are updating this, you should also update the setting in\n// timeline-meta.\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERFORMANCE,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  settingName: 'annotations-hidden',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: true,\n});\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as MobileThrottling from './mobile_throttling.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for throttling the network\n   */\n  throttling: 'Throttling',\n  /**\n   * @description Command for showing the Mobile Throttling tool.\n   */\n  showThrottling: 'Show Throttling',\n  /**\n   * @description Title of an action in the network conditions tool to network offline\n   */\n  goOffline: 'Go offline',\n  /**\n   * @description A tag of Mobile related settings that can be searched in the command menu\n   */\n  device: 'device',\n  /**\n   * @description A tag of Network related actions that can be searched in the command menu\n   */\n  throttlingTag: 'throttling',\n  /**\n   * @description Title of an action in the network conditions tool to simulate an environment with a\n   * slow 3G connection, i.e. for a low end mobile device.\n   */\n  enableSlowGThrottling: 'Enable slow `3G` throttling',\n  /**\n   * @description Title of an action in the network conditions tool to simulate an environment with a\n   * medium-speed 3G connection, i.e. for a mid-tier mobile device.\n   */\n  enableFastGThrottling: 'Enable fast `3G` throttling',\n  /**\n   * @description Title of an action in the network conditions tool to network online\n   */\n  goOnline: 'Go online',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/mobile_throttling-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedMobileThrottlingModule: (typeof MobileThrottling|undefined);\n\nasync function loadMobileThrottlingModule(): Promise<typeof MobileThrottling> {\n  if (!loadedMobileThrottlingModule) {\n    loadedMobileThrottlingModule = await import('./mobile_throttling.js');\n  }\n  return loadedMobileThrottlingModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'throttling-conditions',\n  title: i18nLazyString(UIStrings.throttling),\n  commandPrompt: i18nLazyString(UIStrings.showThrottling),\n  order: 35,\n  async loadView() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingSettingsTab.ThrottlingSettingsTab();\n  },\n  settings: [\n    'custom-network-conditions',\n    'calibrated-cpu-throttling',\n  ],\n  iconName: 'performance',\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-offline',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.goOffline),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-low-end-mobile',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.enableSlowGThrottling),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-mid-tier-mobile',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.enableFastGThrottling),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-online',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.goOnline),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  settingName: 'custom-network-conditions',\n  settingType: Common.Settings.SettingType.ARRAY,\n  defaultValue: [],\n});\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Extensions from '../../models/extensions/extensions.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as NetworkForward from './forward/forward.js';\nimport type * as Network from './network.js';\n\nconst UIStrings = {\n  /**\n   * @description Command for showing the 'Network' tool\n   */\n  showNetwork: 'Show Network',\n  /**\n   * @description Title of the Network tool\n   */\n  network: 'Network',\n  /**\n   * @description Command for showing the 'Network request blocking' tool\n   */\n  showNetworkRequestBlocking: 'Show Network request blocking',\n  /**\n   * @description Title of the 'Network request blocking' tool in the bottom drawer\n   */\n  networkRequestBlocking: 'Network request blocking',\n  /**\n   * @description Command for showing the 'Network conditions' tool\n   */\n  showNetworkConditions: 'Show Network conditions',\n  /**\n   * @description Title of the 'Network conditions' tool in the bottom drawer\n   */\n  networkConditions: 'Network conditions',\n  /**\n   * @description A tag of Network Conditions tool that can be searched in the command menu\n   */\n  diskCache: 'disk cache',\n  /**\n   * @description A tag of Network Conditions tool that can be searched in the command menu\n   */\n  networkThrottling: 'network throttling',\n  /**\n   * @description Command for showing the 'Search' tool\n   */\n  showSearch: 'Show Search',\n  /**\n   * @description Title of a search bar or tool\n   */\n  search: 'Search',\n  /**\n   * @description Title of an action in the network tool to toggle recording\n   */\n  recordNetworkLog: 'Record network log',\n  /**\n   * @description Title of an action in the network tool to toggle recording\n   */\n  stopRecordingNetworkLog: 'Stop recording network log',\n  /**\n   * @description Title of an action that hides network request details\n   */\n  hideRequestDetails: 'Hide request details',\n  /**\n   * @description Title of a setting under the Network category in Settings\n   */\n  colorcodeResourceTypes: 'Color-code resource types',\n  /**\n   * @description A tag of Network color-code resource types that can be searched in the command menu\n   */\n  colorCode: 'color code',\n  /**\n   * @description A tag of Network color-code resource types that can be searched in the command menu\n   */\n  resourceType: 'resource type',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  colorCodeByResourceType: 'Color code by resource type',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  useDefaultColors: 'Use default colors',\n  /**\n   * @description Title of a setting under the Network category in Settings\n   */\n  groupNetworkLogByFrame: 'Group network log by frame',\n  /**\n   * @description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  netWork: 'network',\n  /**\n   * @description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  frame: 'frame',\n  /**\n   * @description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  group: 'group',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  groupNetworkLogItemsByFrame: 'Group network log items by frame',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  dontGroupNetworkLogItemsByFrame: 'Don\\'t group network log items by frame',\n  /**\n   * @description Title of a button for clearing the network log\n   */\n  clear: 'Clear network log',\n  /**\n   * @description Title of an action in the Network request blocking panel to add a new URL pattern to the blocklist.\n   */\n  addNetworkRequestBlockingPattern: 'Add network request blocking pattern',\n  /**\n   * @description Title of an action in the Network request blocking panel to clear all URL patterns.\n   */\n  removeAllNetworkRequestBlockingPatterns: 'Remove all network request blocking patterns',\n  /**\n   * @description Title of an action in the Network panel (and title of a setting in the Network category)\n   *              that enables options in the UI to copy or export HAR (not translatable) with sensitive data.\n   */\n  allowToGenerateHarWithSensitiveData: 'Allow to generate `HAR` with sensitive data',\n  /**\n   * @description Title of an action in the Network panel that disables options in the UI to copy or export\n   *              HAR (not translatable) with sensitive data.\n   */\n  dontAllowToGenerateHarWithSensitiveData: 'Don\\'t allow to generate `HAR` with sensitive data',\n  /**\n   * @description Tooltip shown as documentation when hovering the (?) icon next to the \"Allow to generate\n   *              HAR with sensitive data\" option in the Settings panel.\n   */\n  allowToGenerateHarWithSensitiveDataDocumentation:\n      'By default generated HAR logs are sanitized and don\\'t include `Cookie`, `Set-Cookie`, or `Authorization` HTTP headers. When this setting is enabled, options to export/copy HAR with sensitive data are provided.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/network-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedNetworkModule: (typeof Network|undefined);\n\nconst isNode = Root.Runtime.Runtime.isNode();\n\nasync function loadNetworkModule(): Promise<typeof Network> {\n  if (!loadedNetworkModule) {\n    loadedNetworkModule = await import('./network.js');\n  }\n  return loadedNetworkModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (loadedNetworkModule: typeof Network) => T[]): T[] {\n  if (loadedNetworkModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedNetworkModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'network',\n  commandPrompt: i18nLazyString(UIStrings.showNetwork),\n  title: i18nLazyString(UIStrings.network),\n  order: 40,\n  isPreviewFeature: isNode,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'network.blocked-urls',\n  commandPrompt: i18nLazyString(UIStrings.showNetworkRequestBlocking),\n  title: i18nLazyString(UIStrings.networkRequestBlocking),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 60,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.BlockedURLsPane();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'network.config',\n  commandPrompt: i18nLazyString(UIStrings.showNetworkConditions),\n  title: i18nLazyString(UIStrings.networkConditions),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 40,\n  tags: [\n    i18nLazyString(UIStrings.diskCache),\n    i18nLazyString(UIStrings.networkThrottling),\n    i18n.i18n.lockedLazyString('useragent'),\n    i18n.i18n.lockedLazyString('user agent'),\n    i18n.i18n.lockedLazyString('user-agent'),\n  ],\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkConfigView.NetworkConfigView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NETWORK_SIDEBAR,\n  id: 'network.search-network-tab',\n  commandPrompt: i18nLazyString(UIStrings.showSearch),\n  title: i18nLazyString(UIStrings.search),\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.SearchNetworkView.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.recordNetworkLog),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecordingNetworkLog),\n    },\n  ],\n  bindings: [\n    {\n      shortcut: 'Ctrl+E',\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n    },\n    {\n      shortcut: 'Meta+E',\n      platform: UI.ActionRegistration.Platforms.MAC,\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.clear',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.clear),\n  iconClass: UI.ActionRegistration.IconClass.CLEAR,\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  bindings: [\n    {\n      shortcut: 'Ctrl+L',\n    },\n    {\n      shortcut: 'Meta+K',\n      platform: UI.ActionRegistration.Platforms.MAC,\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.hide-request-details',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.hideRequestDetails),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: 'Esc',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.search',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.search),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+F',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+F',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.add-network-request-blocking-pattern',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.addNetworkRequestBlockingPattern),\n  iconClass: UI.ActionRegistration.IconClass.PLUS,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.BlockedURLsPane.BlockedURLsPane]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.ActionDelegate();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.remove-all-network-request-blocking-patterns',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.removeAllNetworkRequestBlockingPatterns),\n  iconClass: UI.ActionRegistration.IconClass.CLEAR,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.BlockedURLsPane.BlockedURLsPane]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.ActionDelegate();\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveData),\n  settingName: 'network.show-options-to-generate-har-with-sensitive-data',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18n.i18n.lockedLazyString('HAR'),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveData),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.dontAllowToGenerateHarWithSensitiveData),\n    },\n  ],\n  learnMore: {\n    url: 'https://goo.gle/devtools-export-hars' as Platform.DevToolsPath.UrlString,\n    tooltip: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveDataDocumentation),\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.colorcodeResourceTypes),\n  settingName: 'network-color-code-resource-types',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.colorCode),\n    i18nLazyString(UIStrings.resourceType),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.colorCodeByResourceType),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.useDefaultColors),\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.groupNetworkLogByFrame),\n  settingName: 'network.group-by-frame',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.netWork),\n    i18nLazyString(UIStrings.frame),\n    i18nLazyString(UIStrings.group),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.groupNetworkLogItemsByFrame),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.dontGroupNetworkLogItemsByFrame),\n    },\n  ],\n});\n\nUI.ViewManager.registerLocationResolver({\n  name: UI.ViewManager.ViewLocationValues.NETWORK_SIDEBAR,\n  category: UI.ViewManager.ViewLocationCategory.NETWORK,\n  async loadResolver() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n});\n\nUI.ContextMenu.registerProvider({\n  contextTypes() {\n    return [\n      SDK.NetworkRequest.NetworkRequest,\n      SDK.Resource.Resource,\n      Workspace.UISourceCode.UISourceCode,\n      SDK.TraceObject.RevealableNetworkRequest,\n    ];\n  },\n  async loadProvider() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n  experiment: undefined,\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.NetworkRequest.NetworkRequest,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.UIRequestLocation.UIRequestLocation];\n  },\n  destination: undefined,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestLocationRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.NetworkRequestId.NetworkRequestId];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestIdRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.UIFilter.UIRequestFilter, Extensions.ExtensionServer.RevealableNetworkRequestFilter];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.NetworkLogWithFilterRevealer();\n  },\n});\n"],
  "mappings": "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",
  "names": ["Common", "i18n", "UI", "UIStrings", "str_", "i18nLazyString", "Common", "i18n", "UI", "UIStrings", "str_", "i18nLazyString", "Common", "i18n", "SDK", "UI", "UIStrings", "str_", "i18nLazyString"]
}
