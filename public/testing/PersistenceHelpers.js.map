{"version":3,"file":"PersistenceHelpers.js","sourceRoot":"","sources":["../../../../../front_end/testing/PersistenceHelpers.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,0BAA0B,CAAC;AAEnD,OAAO,EAAC,wBAAwB,EAAC,MAAM,8BAA8B,CAAC;AACtE,OAAO,KAAK,GAAG,MAAM,oBAAoB,CAAC;AAG1C,OAAO,KAAK,SAAS,MAAM,kCAAkC,CAAC;AAE9D,OAAO,EACL,aAAa,GACd,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAAC,4BAA4B,EAAC,MAAM,0BAA0B,CAAC;AAEtE,wFAAwF;AACxF,6GAA6G;AAC7G,gGAAgG;AAChG,MAAM,UAAU,uCAAuC,CACnD,gBAIC,EACD,gBAAiD,EAAE,OAAe,EAAE,MAAyB;IAE/F,4FAA4F;IAC5F,gDAAgD;IAChD,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IAC1E,sBAAsB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACvC,MAAM,QAAQ,GAAG,iBAAiB,CAAC;IACnC,MAAM,QAAQ,GAAG,yBAAyB,CAAC,MAAM,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAExF,yFAAyF;IACzF,mCAAmC;IACnC,MAAM,QAAQ,GAAG,IAAI,SAAS,CAAC,YAAY,CAAC,oBAAoB,CAAC,QAAQ,CAAC,YAAY,EAAE,EAAE,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;IAClH,OAAO,4BAA4B,CAAC;QAClC,GAAG,EAAE,gBAAgB,CAAC,iBAAiB;QACvC,OAAO;QACP,cAAc,EAAE,gBAAgB,CAAC,cAAc;QAC/C,QAAQ;QACR,QAAQ;QACR,WAAW,EAAE,IAAI;QACjB,IAAI,EAAE,gBAAgB,CAAC,IAAI;KAC5B,CAAC,CAAC;AACL,CAAC;AAED,SAAS,sBAAsB,CAAC,MAAyB,EAAE,MAAuC;IAChG,aAAa,CAAC,MAAM,EAAE,qBAAqB,EAAE;QAC3C,KAAK,EAAE;YACL,EAAE,EAAE,MAAM;YACV,QAAQ,EAAE,KAAK;YACf,GAAG,EAAE,GAAG,MAAM,aAAa;YAC3B,iBAAiB,EAAE,MAAM;YACzB,cAAc,EAAE,MAAM;YACtB,QAAQ,EAAE,WAAW;YACrB,iBAAiB,uDAAwC;YACzD,8BAA8B,wEAAuD;YACrF,gBAAgB,EAAE,EAAE;SACrB;KACF,CAAC,CAAC;AACL,CAAC;AAED,SAAS,yBAAyB,CAC9B,MAAyB,EAAE,gBAAiD,EAAE,QAAgB,EAAE,OAAe;IACjH,MAAM,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;IAChF,wBAAwB,CAAC,iBAAiB,CAAC,CAAC;IAE5C,MAAM,WAAW,GAAG,MAA+B,CAAC;IACpD,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CACtC,iBAAiB,EAAE,IAAI,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,WAAW,EAAE,IAAI,EAC9E,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;IAEtG,MAAM,KAAK,GAAG,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACxD,wBAAwB,CAAC,KAAK,CAAC,CAAC;IAChC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC5B,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../core/common/common.js';\nimport type * as Platform from '../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../core/platform/platform.js';\nimport * as SDK from '../core/sdk/sdk.js';\nimport * as Protocol from '../generated/protocol.js';\nimport type * as Persistence from '../models/persistence/persistence.js';\nimport * as Workspace from '../models/workspace/workspace.js';\n\nimport {\n  dispatchEvent,\n} from './MockConnection.js';\nimport {createFileSystemUISourceCode} from './UISourceCodeHelpers.js';\n\n// This helper sets up a file system and a file system uiSourceCode that can be used for\n// Persistence testing. As soon as a script is added that has the given `networkScriptUrl` and the `content`,\n// PersistenceImpl will try to bind the network uiSourceCode with this file system uiSourceCode.\nexport function createFileSystemFileForPersistenceTests(\n    fileSystemScript: {\n      fileSystemFileUrl: Platform.DevToolsPath.UrlString,\n      fileSystemPath: Platform.DevToolsPath.UrlString,\n      type?: string,\n    },\n    networkScriptUrl: Platform.DevToolsPath.UrlString, content: string, target: SDK.Target.Target):\n    {uiSourceCode: Workspace.UISourceCode.UISourceCode, project: Persistence.FileSystemWorkspaceBinding.FileSystem} {\n  // First, set up a network resource that is described by the networkScriptUrl. This resource\n  // file is required for a binding to be created.\n  const origin = Common.ParsedURL.ParsedURL.extractOrigin(networkScriptUrl);\n  dispatchDocumentOpened(target, origin);\n  const mimeType = 'text/javascript';\n  const resource = createResourceInMainFrame(target, networkScriptUrl, mimeType, content);\n\n  // Now create the file system uiSourceCode to match the same meta data and content as the\n  // created network's resource file.\n  const metadata = new Workspace.UISourceCode.UISourceCodeMetadata(resource.lastModified(), resource.contentSize());\n  return createFileSystemUISourceCode({\n    url: fileSystemScript.fileSystemFileUrl,\n    content,\n    fileSystemPath: fileSystemScript.fileSystemPath,\n    mimeType,\n    metadata,\n    autoMapping: true,\n    type: fileSystemScript.type,\n  });\n}\n\nfunction dispatchDocumentOpened(target: SDK.Target.Target, origin: Platform.DevToolsPath.UrlString) {\n  dispatchEvent(target, 'Page.documentOpened', {\n    frame: {\n      id: 'main',\n      loaderId: 'foo',\n      url: `${origin}/index.html`,\n      domainAndRegistry: 'site',\n      securityOrigin: origin,\n      mimeType: 'text/html',\n      secureContextType: Protocol.Page.SecureContextType.Secure,\n      crossOriginIsolatedContextType: Protocol.Page.CrossOriginIsolatedContextType.Isolated,\n      gatedAPIFeatures: [],\n    },\n  });\n}\n\nfunction createResourceInMainFrame(\n    target: SDK.Target.Target, networkScriptUrl: Platform.DevToolsPath.UrlString, mimeType: string, content: string) {\n  const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n  assertNotNullOrUndefined(resourceTreeModel);\n\n  const mainFrameId = 'main' as Protocol.Page.FrameId;\n  const resource = new SDK.Resource.Resource(\n      resourceTreeModel, null, networkScriptUrl, networkScriptUrl, mainFrameId, null,\n      Common.ResourceType.ResourceType.fromMimeType('text/javascript'), mimeType, null, content.length);\n\n  const frame = resourceTreeModel.frameForId(mainFrameId);\n  assertNotNullOrUndefined(frame);\n  frame.addResource(resource);\n  return resource;\n}\n"]}