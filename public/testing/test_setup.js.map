{"version":3,"file":"test_setup.js","sourceRoot":"","sources":["../../../../../front_end/testing/test_setup.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * This file is automatically loaded and run by Karma because it automatically\n * loads and injects all *.js files it finds.\n */\n\nimport * as Common from '../core/common/common.js';\nimport * as Host from '../core/host/host.js';\nimport * as Trace from '../models/trace/trace.js';\nimport * as TraceSourceMapsResolver from '../models/trace_source_maps_resolver/trace_source_maps_resolver.js';\nimport * as ThemeSupport from '../ui/legacy/theme_support/theme_support.js';\n\nimport {cleanTestDOM, setupTestDOM} from './DOMHooks.js';\nimport {createFakeSetting, resetHostConfig} from './EnvironmentHelpers.js';\nimport {TraceLoader} from './TraceLoader.js';\nimport {\n  checkForPendingActivity,\n  startTrackingAsyncActivity,\n  stopTrackingAsyncActivity,\n} from './TrackAsyncOperations.js';\n\nconst style = document.createElement('style');\nstyle.innerText =\n    '@import url(\\'https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap\\');';\ndocument.head.append(style);\ndocument.documentElement.classList.add('platform-screenshot-test');\n\n// Warm-up fonts to be readily available.\nbefore(async function() {\n  const div = document.createElement('div');\n  div.style.fontFamily = 'roboto';\n  // Some latin characters to trigger the latin font file to be loaded.\n  // Additional non-latin characters can be included if needed.\n  div.innerText = 'abc';\n  // eslint-disable-next-line rulesdir/no-document-body-mutation\n  document.body.append(div);\n  await document.fonts.ready;\n  div.remove();\n\n  // There is no way to provide after each file run via a test set up file.\n  // What we do instead is add and after all in all global test suits\n  // This is as close as we can get to after each file.\n  this.test?.parent?.suites.forEach(function(suite) {\n    suite.afterAll(function() {\n      TraceLoader.resetCache();\n    });\n  });\n});\n\nbeforeEach(async () => {\n  stopTrackingAsyncActivity();\n  resetHostConfig();\n  // Clear out any Sinon stubs or spies between individual tests.\n  sinon.restore();\n  await setupTestDOM();\n\n  // Ensure that no trace data leaks between tests when testing the trace engine.\n  for (const handler of Object.values(Trace.Handlers.ModelHandlers)) {\n    handler.reset();\n  }\n  Trace.Helpers.SyntheticEvents.SyntheticEventsManager.reset();\n  TraceSourceMapsResolver.SourceMapsResolver.clearResolvedNodeNames();\n\n  // Don't retain host binding listeners across tests. Set this up before initializing ThemeSupport as\n  // ThemeSupport adds a host binding listener.\n  Host.InspectorFrontendHost.InspectorFrontendHostInstance.events = new Common.ObjectWrapper.ObjectWrapper();\n\n  // Some unit tests exercise code that assumes a ThemeSupport instance is available.\n  // Run this in a beforeEach in case an individual test overrides it.\n  const setting = createFakeSetting('theme', 'default');\n  ThemeSupport.ThemeSupport.instance({forceNew: true, setting});\n\n  startTrackingAsyncActivity();\n});\n\nafterEach(async function() {\n  await cleanTestDOM(this.currentTest?.fullTitle());\n  await checkForPendingActivity(this.currentTest?.fullTitle());\n  stopTrackingAsyncActivity();\n  // Clear out any Sinon stubs or spies between individual tests.\n  sinon.restore();\n});\n"]}