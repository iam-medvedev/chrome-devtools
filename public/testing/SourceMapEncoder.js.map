{"version":3,"file":"SourceMapEncoder.js","sourceRoot":"","sources":["../../../../../front_end/testing/SourceMapEncoder.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../core/sdk/sdk.js';\n\nconst base64Digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nexport function encodeVlq(n: number): string {\n  // Set the sign bit as the least significant bit.\n  n = n >= 0 ? 2 * n : 1 - 2 * n;\n  // Encode into a base64 run.\n  let result = '';\n  while (true) {\n    // Extract the lowest 5 bits and remove them from the number.\n    const digit = n & 0x1f;\n    n >>= 5;\n    // Is there anything more left to encode?\n    if (n === 0) {\n      // We are done encoding, finish the run.\n      result += base64Digits[digit];\n      break;\n    } else {\n      // There is still more encode, so add the digit and the continuation bit.\n      result += base64Digits[0x20 + digit];\n    }\n  }\n  return result;\n}\n\nexport function encodeVlqList(list: number[]) {\n  return list.map(encodeVlq).join('');\n}\n\n// Encode array mappings of the form \"compiledLine:compiledColumn => srcFile:srcLine:srcColumn@name\"\n// as a source map.\nexport function encodeSourceMap(textMap: string[], sourceRoot?: string): SDK.SourceMap.SourceMapV3Object {\n  let mappings = '';\n  const sources: string[] = [];\n  const names: string[] = [];\n  let sourcesContent: (null|string)[]|undefined;\n\n  const state = {\n    line: -1,\n    column: 0,\n    srcFile: 0,\n    srcLine: 0,\n    srcColumn: 0,\n    srcName: 0,\n  };\n\n  for (const mapping of textMap) {\n    let match = mapping.match(/^(\\d+):(\\d+)(?:\\s*=>\\s*([^:]+):(\\d+):(\\d+)(?:@(\\S+))?)?$/);\n    if (!match) {\n      match = mapping.match(/^([^:]+):\\s*(.+)$/);\n      if (!match) {\n        throw new Error(`Cannot parse mapping \"${mapping}\"`);\n      }\n      (sourcesContent = sourcesContent ?? [])[getOrAddString(sources, match[1])] = match[2];\n      continue;\n    }\n\n    const lastState = Object.assign({}, state);\n    state.line = Number(match[1]);\n    state.column = Number(match[2]);\n    const hasSource = match[3] !== undefined;\n    const hasName = hasSource && (match[6] !== undefined);\n    if (hasSource) {\n      state.srcFile = getOrAddString(sources, match[3]);\n      state.srcLine = Number(match[4]);\n      state.srcColumn = Number(match[5]);\n      if (hasName) {\n        state.srcName = getOrAddString(names, match[6]);\n      }\n    }\n\n    if (state.line < lastState.line) {\n      throw 'Line numbers must be increasing';\n    }\n\n    const isNewLine = state.line !== lastState.line;\n\n    if (isNewLine) {\n      // Fixup for the first line mapping.\n      if (lastState.line === -1) {\n        lastState.line = 0;\n      }\n      // Insert semicolons for all the new lines.\n      mappings += ';'.repeat(state.line - lastState.line);\n      // Reset the compiled code column counter.\n      lastState.column = 0;\n    } else {\n      mappings += ',';\n    }\n\n    // Encode the mapping and add it to the list of mappings.\n    const toEncode = [state.column - lastState.column];\n    if (hasSource) {\n      toEncode.push(\n          state.srcFile - lastState.srcFile, state.srcLine - lastState.srcLine, state.srcColumn - lastState.srcColumn);\n      if (hasName) {\n        toEncode.push(state.srcName - lastState.srcName);\n      }\n    }\n    mappings += encodeVlqList(toEncode);\n  }\n\n  const sourceMapV3: SDK.SourceMap.SourceMapV3 = {version: 3, mappings, sources, names};\n  if (sourceRoot !== undefined) {\n    sourceMapV3.sourceRoot = sourceRoot;\n  }\n  if (sourcesContent !== undefined) {\n    for (let i = 0; i < sources.length; ++i) {\n      if (typeof sourcesContent[i] !== 'string') {\n        sourcesContent[i] = null;\n      }\n    }\n    sourceMapV3.sourcesContent = sourcesContent;\n  }\n  return sourceMapV3;\n\n  function getOrAddString(array: string[], s: string) {\n    const index = array.indexOf(s);\n    if (index >= 0) {\n      return index;\n    }\n    array.push(s);\n    return array.length - 1;\n  }\n}\n\nexport class OriginalScopeBuilder {\n  #encodedScope = '';\n  #lastLine = 0;\n\n  start(line: number, column: number, kind: SDK.SourceMapScopes.ScopeKind, name?: number, variables?: number[]): this {\n    if (this.#encodedScope !== '') {\n      this.#encodedScope += ',';\n    }\n\n    const lineDiff = line - this.#lastLine;\n    this.#lastLine = line;\n    const flags = (name !== undefined ? 0x1 : 0x0) | (variables !== undefined ? 0x2 : 0x0);\n\n    this.#encodedScope += encodeVlqList([lineDiff, column, this.#encodeKind(kind), flags]);\n\n    if (name !== undefined) {\n      this.#encodedScope += encodeVlq(name);\n    }\n    if (variables !== undefined) {\n      this.#encodedScope += encodeVlq(variables.length);\n      this.#encodedScope += encodeVlqList(variables);\n    }\n\n    return this;\n  }\n\n  end(line: number, column: number): this {\n    if (this.#encodedScope !== '') {\n      this.#encodedScope += ',';\n    }\n\n    const lineDiff = line - this.#lastLine;\n    this.#lastLine = line;\n    this.#encodedScope += encodeVlqList([lineDiff, column]);\n\n    return this;\n  }\n\n  build(): string {\n    const result = this.#encodedScope;\n    this.#lastLine = 0;\n    this.#encodedScope = '';\n    return result;\n  }\n\n  #encodeKind(kind: SDK.SourceMapScopes.ScopeKind): number {\n    switch (kind) {\n      case 'global':\n        return 0x01;\n      case 'function':\n        return 0x02;\n      case 'class':\n        return 0x03;\n      case 'block':\n        return 0x04;\n    }\n  }\n}\n"]}