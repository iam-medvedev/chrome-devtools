{"version":3,"file":"TrackAsyncOperations.js","sourceRoot":"","sources":["../../../../../front_end/testing/TrackAsyncOperations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\ntype TrackedAsyncOperation = 'Promise'|'requestAnimationFrame'|'setTimeout'|'setInterval'|'requestIdleCallback'|\n    'cancelIdleCallback'|'cancelAnimationFrame'|'clearTimeout'|'clearInterval';\n\ntype TrackedAsyncOperations = {\n  [K in TrackedAsyncOperation]: typeof window[K];\n};\n/**\n * Capture the original at point in creation of the module\n * Unless something before this is loaded\n * This should always be the original\n */\nconst originals: Readonly<TrackedAsyncOperations> = {\n  Promise,\n  requestAnimationFrame: requestAnimationFrame.bind(window),\n  requestIdleCallback: requestIdleCallback.bind(window),\n  setInterval: setInterval.bind(window),\n  setTimeout: setTimeout.bind(window),\n  cancelAnimationFrame: cancelAnimationFrame.bind(window),\n  clearInterval: clearInterval.bind(window),\n  clearTimeout: clearTimeout.bind(window),\n  cancelIdleCallback: cancelIdleCallback.bind(window)\n};\n\ninterface AsyncActivity {\n  type: TrackedAsyncOperation;\n  pending: boolean;\n  cancelDelayed?: () => void;\n  id?: string;\n  runImmediate?: () => void;\n  stack?: string;\n  promise?: Promise<unknown>;\n}\n\nconst asyncActivity: AsyncActivity[] = [];\n\nexport async function checkForPendingActivity(testName = '') {\n  let stillPending: AsyncActivity[] = [];\n  const wait = 5;\n  let retries = 20;\n  // We will perform multiple iteration of waiting and forced completions to see\n  // if all promises are eventually resolved.\n  while (retries > 0) {\n    const pendingCount = asyncActivity.filter(a => a.pending).length;\n    const totalCount = asyncActivity.length;\n    try {\n      const PromiseConstructor = originals.Promise;\n      // First we wait for the pending async activity to finish normally\n      await PromiseConstructor.all(asyncActivity.filter(a => a.pending).map(a => PromiseConstructor.race([\n        a.promise,\n        new PromiseConstructor<void>(\n            (resolve, reject) => originals.setTimeout(\n                () => {\n                  if (!a.pending) {\n                    resolve();\n                    return;\n                  }\n                  // If something is still pending after some time, we try to\n                  // force the completion by running timeout and animation frame\n                  // handlers\n                  if (a.cancelDelayed && a.runImmediate) {\n                    a.cancelDelayed();\n                    a.runImmediate();\n                  } else {\n                    reject();\n                  }\n                },\n                wait)),\n      ])));\n\n      // If the above didn't throw, all the original pending activity has\n      // completed, but it could have triggered more\n      stillPending = asyncActivity.filter(a => a.pending);\n      if (!stillPending.length) {\n        break;\n      }\n      --retries;\n    } catch {\n      stillPending = asyncActivity.filter(a => a.pending);\n      const newTotalCount = asyncActivity.length;\n      // Something is still pending. It might get resolved by force completion\n      // of new activity added during the iteration, so let's retry a couple of\n      // times.\n      if (newTotalCount === totalCount && stillPending.length === pendingCount) {\n        --retries;\n      }\n    }\n  }\n  if (stillPending.length) {\n    throw new Error(\n        `The test \"${testName}\" has completed, but there are still pending async operations\\n` +\n        stillPending.map(a => `Pending '${a.type}' created at: \\n${a.stack}`).join('\\n\\n'));\n  }\n}\n\nexport function stopTrackingAsyncActivity() {\n  asyncActivity.length = 0;\n  restoreAll();\n}\n\nfunction trackingRequestAnimationFrame(fn: FrameRequestCallback) {\n  const activity: AsyncActivity = {type: 'requestAnimationFrame', pending: true, stack: getStack(new Error())};\n  let id = 0;\n  activity.promise = new originals.Promise<void>(resolve => {\n    activity.runImmediate = () => {\n      fn(performance.now());\n      activity.pending = false;\n      resolve();\n    };\n    id = originals.requestAnimationFrame(activity.runImmediate);\n    activity.id = 'a' + id;\n    activity.cancelDelayed = () => {\n      originals.cancelAnimationFrame(id);\n      activity.pending = false;\n      resolve();\n    };\n  });\n  asyncActivity.push(activity);\n  return id;\n}\n\nfunction trackingRequestIdleCallback(fn: IdleRequestCallback, opts?: IdleRequestOptions): number {\n  const activity: AsyncActivity = {type: 'requestIdleCallback', pending: true, stack: getStack(new Error())};\n  let id = 0;\n  activity.promise = new originals.Promise<void>(resolve => {\n    activity.runImmediate = (idleDeadline?: IdleDeadline) => {\n      fn(idleDeadline ?? {didTimeout: true, timeRemaining: () => 0} as IdleDeadline);\n      activity.pending = false;\n      resolve();\n    };\n    id = originals.requestIdleCallback(activity.runImmediate, opts);\n    activity.id = 'd' + id;\n    activity.cancelDelayed = () => {\n      originals.cancelIdleCallback(id);\n      activity.pending = false;\n      resolve();\n    };\n  });\n  asyncActivity.push(activity);\n  return id;\n}\n\nfunction trackingSetTimeout(arg: TimerHandler, time?: number, ...params: unknown[]) {\n  const activity: AsyncActivity = {type: 'setTimeout', pending: true, stack: getStack(new Error())};\n  let id: number|undefined;\n  activity.promise = new originals.Promise<void>(resolve => {\n    activity.runImmediate = () => {\n      originals.clearTimeout(id);\n      if (typeof (arg) === 'function') {\n        arg(...params);\n      } else {\n        eval(arg);\n      }\n      activity.pending = false;\n      resolve();\n    };\n    id = originals.setTimeout(activity.runImmediate, time);\n    activity.id = 't' + id;\n    activity.cancelDelayed = () => {\n      originals.clearTimeout(id);\n      activity.pending = false;\n      resolve();\n    };\n  });\n  asyncActivity.push(activity);\n  return id;\n}\n\nfunction trackingSetInterval(arg: TimerHandler, time?: number, ...params: unknown[]) {\n  const activity: AsyncActivity = {\n    type: 'setInterval',\n    pending: true,\n    stack: getStack(new Error()),\n  };\n  let id = 0;\n  activity.promise = new originals.Promise<void>(resolve => {\n    id = originals.setInterval(arg, time, ...params);\n    activity.id = 'i' + id;\n    activity.cancelDelayed = () => {\n      originals.clearInterval(id);\n      activity.pending = false;\n      resolve();\n    };\n  });\n  asyncActivity.push(activity);\n  return id;\n}\n\nfunction cancelTrackingActivity(id: string) {\n  const activity = asyncActivity.find(a => a.id === id);\n  if (activity?.cancelDelayed) {\n    activity.cancelDelayed();\n  }\n}\n\ntype UntrackedPromiseMethod = 'prototype'|typeof Symbol.species;\n\n/**\n * Extracted into separate object which will make TypeScript\n * check fail if new properties are added.\n */\nconst BasePromise: Omit<PromiseConstructor, UntrackedPromiseMethod> = {\n  all: Promise.all,\n  allSettled: Promise.allSettled,\n  any: Promise.any,\n  race: Promise.race,\n  reject: Promise.reject,\n  resolve: Promise.resolve,\n  withResolvers: Promise.withResolvers,\n  try: Promise.try,\n};\n\n// We can't subclass native Promise here as this will cause all derived promises\n// (e.g. those returned by `then`) to also be subclass instances. This results\n// in a new asyncActivity entry on each iteration of checkForPendingActivity\n// which never settles.\nconst TrackingPromise: PromiseConstructor = Object.assign(\n    function<T>(arg: (resolve: (value: T|PromiseLike<T>) => void, reject: (reason?: unknown) => void) => void) {\n      const promise = new originals.Promise(arg);\n      const activity: AsyncActivity = {\n        type: 'Promise',\n        promise,\n        stack: getStack(new Error()),\n        pending: false,\n      };\n      promise.then = function<TResult1 = T, TResult2 = never>(\n          onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>)|undefined|null,\n          onRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>)|undefined|\n          null): Promise<TResult1|TResult2> {\n        activity.pending = true;\n        return originals.Promise.prototype.then.apply(this, [\n          result => {\n            if (!onFulfilled) {\n              return this;\n            }\n            activity.pending = false;\n            return onFulfilled(result);\n          },\n          result => {\n            if (!onRejected) {\n              return this;\n            }\n            activity.pending = false;\n            return onRejected(result);\n          },\n        ]) as Promise<TResult1|TResult2>;\n      };\n\n      asyncActivity.push(activity);\n      return promise;\n    },\n    BasePromise as PromiseConstructor,\n);\n\nconst stubMethods: TrackedAsyncOperations = {\n  requestAnimationFrame: trackingRequestAnimationFrame,\n  setTimeout: trackingSetTimeout as unknown as typeof setTimeout,\n  setInterval: trackingSetInterval as unknown as typeof setInterval,\n  requestIdleCallback: trackingRequestIdleCallback,\n  cancelAnimationFrame: id => cancelTrackingActivity('a' + id),\n  clearTimeout: id => cancelTrackingActivity('t' + id),\n  clearInterval: id => cancelTrackingActivity('i' + id),\n  cancelIdleCallback: id => cancelTrackingActivity('d' + id),\n  Promise: TrackingPromise,\n};\n\nexport function startTrackingAsyncActivity() {\n  // Reset everything before starting a new tracking session.\n  // Do this in case something went wrong with cleanup\n  stopTrackingAsyncActivity();\n  // We are tracking all asynchronous activity but let it run normally during\n  // the test.\n  stub('requestAnimationFrame');\n  stub('setTimeout');\n  stub('setInterval');\n  stub('requestIdleCallback');\n  stub('cancelAnimationFrame');\n  stub('clearTimeout');\n  stub('clearInterval');\n  stub('cancelIdleCallback');\n  stub('Promise');\n}\n\nconst stubs = new Set<TrackedAsyncOperation>();\nfunction stub<T extends TrackedAsyncOperation>(name: T) {\n  (window[name] as unknown) = stubMethods[name];\n  stubs.add(name);\n}\n\nfunction restoreAll() {\n  for (const name of stubs) {\n    if (window[name] !== stubMethods[name]) {\n      throw new Error(`Unexpected stub for method ${name} found`);\n    }\n    (window[name] as unknown) = originals[name];\n  }\n  stubs.clear();\n}\n\nfunction getStack(error: Error): string {\n  return (error.stack ?? 'No stack').split('\\n').slice(2).join('\\n');\n}\n"]}