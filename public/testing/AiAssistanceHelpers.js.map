{"version":3,"file":"AiAssistanceHelpers.js","sourceRoot":"","sources":["../../../../../front_end/testing/AiAssistanceHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../core/common/common.js';\nimport * as Host from '../core/host/host.js';\nimport * as Platform from '../core/platform/platform.js';\nimport * as SDK from '../core/sdk/sdk.js';\nimport type * as Protocol from '../generated/protocol.js';\nimport * as Logs from '../models/logs/logs.js';\nimport type * as Workspace from '../models/workspace/workspace.js';\n\nimport {\n  createTarget,\n} from './EnvironmentHelpers.js';\nimport {createContentProviderUISourceCodes} from './UISourceCodeHelpers.js';\n\nfunction createMockAidaClient(fetch: Host.AidaClient.AidaClient['fetch']): Host.AidaClient.AidaClient {\n  const fetchStub = sinon.stub();\n  const registerClientEventStub = sinon.stub();\n  return {\n    fetch: fetchStub.callsFake(fetch),\n    registerClientEvent: registerClientEventStub,\n  };\n}\n\ntype MockAidaResponse =\n    Omit<Host.AidaClient.AidaResponse, 'completed'|'metadata'>&{metadata?: Host.AidaClient.AidaResponseMetadata};\n\n/**\n * Creates a mock AIDA client that responds using `data`.\n *\n * Each first-level item of `data` is a single response.\n * Each second-level item of `data` is a chunk of a response.\n * The last chunk sets completed flag to true;\n */\nexport function mockAidaClient(data: Array<[MockAidaResponse, ...MockAidaResponse[]]> = []):\n    Host.AidaClient.AidaClient {\n  let callId = 0;\n  async function* provideAnswer(_: Host.AidaClient.AidaRequest, options?: {signal?: AbortSignal}) {\n    if (!data[callId]) {\n      throw new Error('No data provided to the mock client');\n    }\n\n    for (const [idx, chunk] of data[callId].entries()) {\n      if (options?.signal?.aborted) {\n        throw new Host.AidaClient.AidaAbortError();\n      }\n      const metadata = chunk.metadata ?? {};\n      if (metadata?.attributionMetadata?.attributionAction === Host.AidaClient.RecitationAction.BLOCK) {\n        throw new Host.AidaClient.AidaBlockError();\n      }\n      yield {\n        ...chunk,\n        metadata,\n        completed: idx === data[callId].length - 1,\n      };\n    }\n\n    callId++;\n  }\n\n  return createMockAidaClient(provideAnswer);\n}\n\nexport async function createUISourceCode(options?: {\n  content?: string,\n  mimeType?: string,\n  url?: Platform.DevToolsPath.UrlString,\n  resourceType?: Common.ResourceType.ResourceType,\n  requestContentData?: boolean,\n}): Promise<Workspace.UISourceCode.UISourceCode> {\n  const url = options?.url ?? Platform.DevToolsPath.urlString`http://example.test/script.js`;\n  const {project} = createContentProviderUISourceCodes({\n    items: [\n      {\n        url,\n        mimeType: options?.mimeType ?? 'application/javascript',\n        resourceType: options?.resourceType ?? Common.ResourceType.resourceTypes.Script,\n        content: options?.content ?? undefined,\n      },\n    ],\n    target: createTarget(),\n  });\n\n  const uiSourceCode = project.uiSourceCodeForURL(url);\n  if (!uiSourceCode) {\n    throw new Error('Failed to create a test uiSourceCode');\n  }\n  if (!uiSourceCode.contentType().isTextType()) {\n    uiSourceCode?.setContent('binary', true);\n  }\n  if (options?.requestContentData) {\n    await uiSourceCode.requestContentData();\n  }\n  return uiSourceCode;\n}\n\nexport function createNetworkRequest(): SDK.NetworkRequest.NetworkRequest {\n  const networkRequest = SDK.NetworkRequest.NetworkRequest.create(\n      'requestId' as Protocol.Network.RequestId, Platform.DevToolsPath.urlString`https://www.example.com/script.js`,\n      Platform.DevToolsPath.urlString``, null, null, null);\n  networkRequest.statusCode = 200;\n  networkRequest.setRequestHeaders([{name: 'content-type', value: 'bar1'}]);\n  networkRequest.responseHeaders = [{name: 'content-type', value: 'bar2'}, {name: 'x-forwarded-for', value: 'bar3'}];\n\n  const initiatorNetworkRequest = SDK.NetworkRequest.NetworkRequest.create(\n      'requestId' as Protocol.Network.RequestId, Platform.DevToolsPath.urlString`https://www.initiator.com`,\n      Platform.DevToolsPath.urlString``, null, null, null);\n  const initiatedNetworkRequest1 = SDK.NetworkRequest.NetworkRequest.create(\n      'requestId' as Protocol.Network.RequestId, Platform.DevToolsPath.urlString`https://www.example.com/1`,\n      Platform.DevToolsPath.urlString``, null, null, null);\n  const initiatedNetworkRequest2 = SDK.NetworkRequest.NetworkRequest.create(\n      'requestId' as Protocol.Network.RequestId, Platform.DevToolsPath.urlString`https://www.example.com/2`,\n      Platform.DevToolsPath.urlString``, null, null, null);\n\n  sinon.stub(Logs.NetworkLog.NetworkLog.instance(), 'initiatorGraphForRequest')\n      .withArgs(networkRequest)\n      .returns({\n        initiators: new Set([networkRequest, initiatorNetworkRequest]),\n        initiated: new Map([\n          [networkRequest, initiatorNetworkRequest],\n          [initiatedNetworkRequest1, networkRequest],\n          [initiatedNetworkRequest2, networkRequest],\n        ]),\n      })\n      .withArgs(initiatedNetworkRequest1)\n      .returns({\n        initiators: new Set([]),\n        initiated: new Map([\n          [initiatedNetworkRequest1, networkRequest],\n        ]),\n      })\n      .withArgs(initiatedNetworkRequest2)\n      .returns({\n        initiators: new Set([]),\n        initiated: new Map([\n          [initiatedNetworkRequest2, networkRequest],\n        ]),\n      });\n  return networkRequest;\n}\n"]}