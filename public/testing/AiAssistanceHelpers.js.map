{"version":3,"file":"AiAssistanceHelpers.js","sourceRoot":"","sources":["../../../../../front_end/testing/AiAssistanceHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../core/common/common.js';\nimport * as Host from '../core/host/host.js';\nimport * as Platform from '../core/platform/platform.js';\nimport * as SDK from '../core/sdk/sdk.js';\nimport type * as Protocol from '../generated/protocol.js';\nimport * as Bindings from '../models/bindings/bindings.js';\nimport * as Breakpoints from '../models/breakpoints/breakpoints.js';\nimport * as Logs from '../models/logs/logs.js';\nimport * as Persistence from '../models/persistence/persistence.js';\nimport * as ProjectSettings from '../models/project_settings/project_settings.js';\nimport * as Workspace from '../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../models/workspace_diff/workspace_diff.js';\nimport * as AiAssistancePanel from '../panels/ai_assistance/ai_assistance.js';\nimport * as UI from '../ui/legacy/legacy.js';\n\nimport {findMenuItemWithLabel} from './ContextMenuHelpers.js';\nimport {renderElementIntoDOM} from './DOMHelpers.js';\nimport {\n  createTarget,\n} from './EnvironmentHelpers.js';\nimport {createContentProviderUISourceCodes, createFileSystemUISourceCode} from './UISourceCodeHelpers.js';\nimport {createViewFunctionStub} from './ViewFunctionHelpers.js';\n\nfunction createMockAidaClient(fetch: Host.AidaClient.AidaClient['fetch']): Host.AidaClient.AidaClient {\n  const fetchStub = sinon.stub();\n  const registerClientEventStub = sinon.stub();\n  return {\n    fetch: fetchStub.callsFake(fetch),\n    registerClientEvent: registerClientEventStub,\n  };\n}\n\nexport const MockAidaAbortError = {\n  abortError: true,\n} as const;\n\nexport const MockAidaFetchError = {\n  fetchError: true,\n} as const;\n\nexport type MockAidaResponse = Omit<Host.AidaClient.AidaResponse, 'completed'|'metadata'>&\n    {metadata?: Host.AidaClient.AidaResponseMetadata}|typeof MockAidaAbortError|typeof MockAidaFetchError;\n\n/**\n * Creates a mock AIDA client that responds using `data`.\n *\n * Each first-level item of `data` is a single response.\n * Each second-level item of `data` is a chunk of a response.\n * The last chunk sets completed flag to true;\n */\nexport function mockAidaClient(data: Array<[MockAidaResponse, ...MockAidaResponse[]]> = []):\n    Host.AidaClient.AidaClient {\n  let callId = 0;\n  async function* provideAnswer(_: Host.AidaClient.AidaRequest, options?: {signal?: AbortSignal}) {\n    if (!data[callId]) {\n      throw new Error('No data provided to the mock client');\n    }\n\n    for (const [idx, chunk] of data[callId].entries()) {\n      if (options?.signal?.aborted || ('abortError' in chunk)) {\n        throw new Host.AidaClient.AidaAbortError();\n      }\n      if ('fetchError' in chunk) {\n        throw new Error('Fetch error');\n      }\n      const metadata = chunk.metadata ?? {};\n      if (metadata?.attributionMetadata?.attributionAction === Host.AidaClient.RecitationAction.BLOCK) {\n        throw new Host.AidaClient.AidaBlockError();\n      }\n      if (chunk.functionCalls?.length) {\n        callId++;\n        yield {...chunk, metadata, completed: true};\n        break;\n      }\n      const completed = idx === data[callId].length - 1;\n      if (completed) {\n        callId++;\n      }\n      yield {\n        ...chunk,\n        metadata,\n        completed,\n      };\n    }\n  }\n\n  return createMockAidaClient(provideAnswer);\n}\n\nexport async function createUISourceCode(options?: {\n  content?: string,\n  mimeType?: string,\n  url?: Platform.DevToolsPath.UrlString,\n  resourceType?: Common.ResourceType.ResourceType,\n  requestContentData?: boolean,\n}): Promise<Workspace.UISourceCode.UISourceCode> {\n  const url = options?.url ?? Platform.DevToolsPath.urlString`http://example.test/script.js`;\n  const {project} = createContentProviderUISourceCodes({\n    items: [\n      {\n        url,\n        mimeType: options?.mimeType ?? 'application/javascript',\n        resourceType: options?.resourceType ?? Common.ResourceType.resourceTypes.Script,\n        content: options?.content ?? undefined,\n      },\n    ],\n    target: createTarget(),\n  });\n\n  const uiSourceCode = project.uiSourceCodeForURL(url);\n  if (!uiSourceCode) {\n    throw new Error('Failed to create a test uiSourceCode');\n  }\n  if (!uiSourceCode.contentType().isTextType()) {\n    uiSourceCode?.setContent('binary', true);\n  }\n  if (options?.requestContentData) {\n    await uiSourceCode.requestContentData();\n  }\n  return uiSourceCode;\n}\n\nexport function createNetworkRequest(opts?: {\n  url?: Platform.DevToolsPath.UrlString,\n  includeInitiators?: boolean,\n}): SDK.NetworkRequest.NetworkRequest {\n  const networkRequest = SDK.NetworkRequest.NetworkRequest.create(\n      'requestId-0' as Protocol.Network.RequestId,\n      opts?.url ?? Platform.DevToolsPath.urlString`https://www.example.com/script.js`,\n      Platform.DevToolsPath.urlString``, null, null, null);\n  networkRequest.statusCode = 200;\n  networkRequest.setRequestHeaders([{name: 'content-type', value: 'bar1'}]);\n  networkRequest.responseHeaders = [{name: 'content-type', value: 'bar2'}, {name: 'x-forwarded-for', value: 'bar3'}];\n\n  if (opts?.includeInitiators) {\n    const initiatorNetworkRequest = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId-1' as Protocol.Network.RequestId, Platform.DevToolsPath.urlString`https://www.initiator.com`,\n        Platform.DevToolsPath.urlString``, null, null, null);\n    const initiatedNetworkRequest1 = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId-2' as Protocol.Network.RequestId, Platform.DevToolsPath.urlString`https://www.example.com/1`,\n        Platform.DevToolsPath.urlString``, null, null, null);\n    const initiatedNetworkRequest2 = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId-3' as Protocol.Network.RequestId, Platform.DevToolsPath.urlString`https://www.example.com/2`,\n        Platform.DevToolsPath.urlString``, null, null, null);\n\n    sinon.stub(Logs.NetworkLog.NetworkLog.instance(), 'initiatorGraphForRequest')\n        .withArgs(networkRequest)\n        .returns({\n          initiators: new Set([networkRequest, initiatorNetworkRequest]),\n          initiated: new Map([\n            [networkRequest, initiatorNetworkRequest],\n            [initiatedNetworkRequest1, networkRequest],\n            [initiatedNetworkRequest2, networkRequest],\n          ]),\n        })\n        .withArgs(initiatedNetworkRequest1)\n        .returns({\n          initiators: new Set([]),\n          initiated: new Map([\n            [initiatedNetworkRequest1, networkRequest],\n          ]),\n        })\n        .withArgs(initiatedNetworkRequest2)\n        .returns({\n          initiators: new Set([]),\n          initiated: new Map([\n            [initiatedNetworkRequest2, networkRequest],\n          ]),\n        });\n  }\n\n  return networkRequest;\n}\n\nlet panels: AiAssistancePanel.AiAssistancePanel[] = [];\n/**\n * Creates and shows an AiAssistancePanel instance returning the view\n * stubs and the initial view input caused by Widget.show().\n */\nexport async function createAiAssistancePanel(options?: {\n  aidaClient?: Host.AidaClient.AidaClient,\n  aidaAvailability?: Host.AidaClient.AidaAccessPreconditions,\n  syncInfo?: Host.InspectorFrontendHostAPI.SyncInformation,\n  chatView?: AiAssistancePanel.ChatView,\n}) {\n  let aidaAvailabilityForStub = options?.aidaAvailability ?? Host.AidaClient.AidaAccessPreconditions.AVAILABLE;\n\n  const view = createViewFunctionStub(AiAssistancePanel.AiAssistancePanel, {chatView: options?.chatView});\n  const aidaClient = options?.aidaClient ?? mockAidaClient();\n  const checkAccessPreconditionsStub =\n      sinon.stub(Host.AidaClient.AidaClient, 'checkAccessPreconditions').callsFake(() => {\n        return Promise.resolve(aidaAvailabilityForStub);\n      });\n  const panel = new AiAssistancePanel.AiAssistancePanel(view, {\n    aidaClient,\n    aidaAvailability: aidaAvailabilityForStub,\n    syncInfo: options?.syncInfo ?? {isSyncActive: true},\n  });\n  panels.push(panel);\n\n  // In many of the tests we create other panels to allow the right contexts to\n  // be set for the AI Assistance panel.\n  renderElementIntoDOM(panel, {allowMultipleChildren: true});\n  await view.nextInput;\n\n  const stubAidaCheckAccessPreconditions = (aidaAvailability: Host.AidaClient.AidaAccessPreconditions) => {\n    aidaAvailabilityForStub = aidaAvailability;\n    return checkAccessPreconditionsStub;\n  };\n\n  return {\n    panel,\n    view,\n    aidaClient,\n    stubAidaCheckAccessPreconditions,\n  };\n}\n\nexport const setupAutomaticFileSystem = (options: {hasFileSystem: boolean} = {\n  hasFileSystem: false\n}): void => {\n  const root = '/path/to/my-automatic-file-system';\n  const uuid = '549bbf9b-48b2-4af7-aebd-d3ba68993094';\n  const inspectorFrontendHost = sinon.createStubInstance(Host.InspectorFrontendHost.InspectorFrontendHostStub);\n  inspectorFrontendHost.events = sinon.createStubInstance(Common.ObjectWrapper.ObjectWrapper);\n  const projectSettingsModel = sinon.createStubInstance(ProjectSettings.ProjectSettingsModel.ProjectSettingsModel);\n  sinon.stub(projectSettingsModel, 'availability').value('available');\n  sinon.stub(projectSettingsModel, 'projectSettings').value(options.hasFileSystem ? {workspace: {root, uuid}} : {});\n\n  const manager = Persistence.AutomaticFileSystemManager.AutomaticFileSystemManager.instance({\n    forceNew: true,\n    inspectorFrontendHost,\n    projectSettingsModel,\n  });\n  sinon.stub(manager, 'connectAutomaticFileSystem').resolves(true);\n};\n\nlet patchWidgets: AiAssistancePanel.PatchWidget.PatchWidget[] = [];\n/**\n * Creates and shows an AiAssistancePanel instance returning the view\n * stubs and the initial view input caused by Widget.show().\n */\nexport async function createPatchWidget(options?: {\n  aidaClient?: Host.AidaClient.AidaClient,\n}) {\n  const view = createViewFunctionStub(AiAssistancePanel.PatchWidget.PatchWidget);\n  const aidaClient = options?.aidaClient ?? mockAidaClient();\n  const widget = new AiAssistancePanel.PatchWidget.PatchWidget(undefined, view, {\n    aidaClient,\n  });\n  patchWidgets.push(widget);\n\n  widget.markAsRoot();\n  renderElementIntoDOM(widget);\n  await view.nextInput;\n\n  return {\n    widget,\n    view,\n    aidaClient,\n  };\n}\n\nexport async function createPatchWidgetWithDiffView(options?: {\n  aidaClient?: Host.AidaClient.AidaClient,\n}) {\n  const aidaClient = options?.aidaClient ?? mockAidaClient([[{explanation: 'patch applied'}]]);\n  const {view, widget} = await createPatchWidget({aidaClient});\n  widget.changeSummary = 'body { background-color: red; }';\n  view.input.onApplyToWorkspace();\n  assert.strictEqual(\n      (await view.nextInput).patchSuggestionState, AiAssistancePanel.PatchWidget.PatchSuggestionState.SUCCESS);\n\n  return {widget, view, aidaClient};\n}\n\nexport function initializePersistenceImplForTests(): void {\n  const workspace = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n  const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n    forceNew: true,\n    targetManager: SDK.TargetManager.TargetManager.instance(),\n    resourceMapping:\n        new Bindings.ResourceMapping.ResourceMapping(SDK.TargetManager.TargetManager.instance(), workspace),\n  });\n  const breakpointManager = Breakpoints.BreakpointManager.BreakpointManager.instance({\n    forceNew: true,\n    targetManager: SDK.TargetManager.TargetManager.instance(),\n    workspace,\n    debuggerWorkspaceBinding,\n  });\n  Persistence.Persistence.PersistenceImpl.instance({forceNew: true, workspace, breakpointManager});\n  WorkspaceDiff.WorkspaceDiff.workspaceDiff({forceNew: true});\n}\n\nexport function cleanup() {\n  for (const panel of panels) {\n    panel.detach();\n  }\n  panels = [];\n  for (const widget of patchWidgets) {\n    widget.detach();\n  }\n  patchWidgets = [];\n}\n\nexport function openHistoryContextMenu(\n    lastUpdate: AiAssistancePanel.ViewInput,\n    item: string,\n) {\n  const contextMenu = new UI.ContextMenu.ContextMenu(new MouseEvent('click'));\n  lastUpdate.populateHistoryMenu(contextMenu);\n\n  const freestylerEntry = findMenuItemWithLabel(contextMenu.defaultSection(), item);\n  return {\n    contextMenu,\n    id: freestylerEntry?.id(),\n  };\n}\n\nexport function createTestFilesystem(fileSystemPath: string, files?: Array<{\n                                       path: string,\n                                       content: string,\n                                     }>) {\n  const {project, uiSourceCode} = createFileSystemUISourceCode({\n    url: Platform.DevToolsPath.urlString`${fileSystemPath}/index.html`,\n    mimeType: 'text/html',\n    content: 'content',\n    fileSystemPath,\n  });\n\n  uiSourceCode.setWorkingCopy('content');\n\n  for (const file of files ?? []) {\n    const uiSourceCode = project.createUISourceCode(\n        Platform.DevToolsPath.urlString`${fileSystemPath}/${file.path}`, Common.ResourceType.resourceTypes.Script);\n    project.addUISourceCode(uiSourceCode);\n    uiSourceCode.setWorkingCopy(file.content);\n  }\n\n  return {project, uiSourceCode};\n}\n"]}