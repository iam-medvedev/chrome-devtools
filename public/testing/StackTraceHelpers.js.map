{"version":3,"file":"StackTraceHelpers.js","sourceRoot":"","sources":["../../../../../front_end/testing/StackTraceHelpers.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAI7B;;GAEG;AACH,MAAM,UAAU,iBAAiB,CAAC,UAAkB;IAClD,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACvC,OAAO;QACL,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;QACb,QAAQ,EAAE,KAAK,CAAC,CAAC,CAA8B;QAC/C,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;QACtB,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5D,CAAC;AACJ,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../generated/protocol.js';\n\n/**\n * Easily create `Protocol.Runtime.CallFrame`s by passing a string of the format: `<url>:<scriptId>:<name>:<line>:<column>`\n */\nexport function protocolCallFrame(descriptor: string): Protocol.Runtime.CallFrame {\n  const parts = descriptor.split(':', 5);\n  return {\n    url: parts[0],\n    scriptId: parts[1] as Protocol.Runtime.ScriptId,\n    functionName: parts[2],\n    lineNumber: parts[3] ? Number.parseInt(parts[3], 10) : -1,\n    columnNumber: parts[4] ? Number.parseInt(parts[4], 10) : -1,\n  };\n}\n"]}