{"version":3,"file":"sass.js","sources":["../node_modules/@lezer/sass/dist/index.js","../node_modules/@codemirror/lang-sass/dist/index.js"],"sourcesContent":["import { ExternalTokenizer, ContextTracker, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst indent = 150,\n  dedent = 151,\n  descendantOp = 152,\n  InterpolationEnd = 1,\n  InterpolationContinue = 2,\n  Unit = 3,\n  callee = 153,\n  identifier = 154,\n  VariableName = 4,\n  InterpolationStart = 5,\n  newline = 155,\n  blankLineStart = 156,\n  eof = 157,\n  whitespace = 158,\n  LineComment = 6,\n  Comment = 7,\n  IndentedMixin = 8,\n  IndentedInclude = 9,\n  Dialect_indented = 0;\n\n/* Hand-written tokenizers for CSS tokens that can't be\n   expressed by Lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197,\n               8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];\nconst colon = 58, parenL = 40, underscore = 95, bracketL = 91, dash = 45, period = 46,\n      hash = 35, percent = 37, braceL = 123, braceR = 125, slash = 47, asterisk = 42,\n      newlineChar = 10, equals = 61, plus = 43, and = 38;\n\nfunction isAlpha(ch) { return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch >= 161 }\n\nfunction isDigit(ch) { return ch >= 48 && ch <= 57 }\n\nfunction startOfComment(input) {\n  let next;\n  return input.next == slash && ((next = input.peek(1)) == slash || next == asterisk)\n}\n\nconst spaces = new ExternalTokenizer((input, stack) => {\n  if (stack.dialectEnabled(Dialect_indented)) {\n    let prev;\n    if (input.next < 0 && stack.canShift(eof)) {\n      input.acceptToken(eof);\n    } else if (((prev = input.peek(-1)) == newlineChar || prev < 0) && stack.canShift(blankLineStart)) {\n      let spaces = 0;\n      while (input.next != newlineChar && space.includes(input.next)) { input.advance(); spaces++; }\n      if (input.next == newlineChar || startOfComment(input))\n        input.acceptToken(blankLineStart, -spaces);\n      else if (spaces)\n        input.acceptToken(whitespace);\n    } else if (input.next == newlineChar) {\n      input.acceptToken(newline, 1);\n    } else if (space.includes(input.next)) {\n      input.advance();\n      while (input.next != newlineChar && space.includes(input.next)) input.advance();\n      input.acceptToken(whitespace);\n    }\n  } else {\n    let length = 0;\n    while (space.includes(input.next)) {\n      input.advance();\n      length++;\n    }\n    if (length) input.acceptToken(whitespace);\n  }\n}, {contextual: true});\n\nconst comments = new ExternalTokenizer((input, stack) => {\n  if (!startOfComment(input)) return\n  input.advance();\n  if (stack.dialectEnabled(Dialect_indented)) {\n    let indentedComment = -1;\n    for (let off = 1;; off++) {\n      let prev = input.peek(-off - 1);\n      if (prev == newlineChar || prev < 0) {\n        indentedComment = off + 1;\n        break\n      } else if (!space.includes(prev)) {\n        break\n      }\n    }\n    if (indentedComment > -1) { // Weird indented-style comment\n      let block = input.next == asterisk, end = 0;\n      input.advance();\n      while (input.next >= 0) {\n        if (input.next == newlineChar) {\n          input.advance();\n          let indented = 0;\n          while (input.next != newlineChar && space.includes(input.next)) {\n            indented++;\n            input.advance();\n          }\n          if (indented < indentedComment) {\n            end = -indented - 1;\n            break\n          }\n        } else if (block && input.next == asterisk && input.peek(1) == slash) {\n          end = 2;\n          break\n        } else {\n          input.advance();\n        }\n      }\n      input.acceptToken(block ? Comment : LineComment, end);\n      return\n    }\n  }\n  if (input.next == slash) {\n    while (input.next != newlineChar && input.next >= 0) input.advance();\n    input.acceptToken(LineComment);\n  } else {\n    input.advance();\n    while (input.next >= 0) {\n      let {next} = input;\n      input.advance();\n      if (next == asterisk && input.next == slash) {\n        input.advance();\n        break\n      }\n    }\n    input.acceptToken(Comment);\n  }\n});\n\nconst indentedMixins = new ExternalTokenizer((input, stack) => {\n  if ((input.next == plus || input.next == equals) && stack.dialectEnabled(Dialect_indented))\n    input.acceptToken(input.next == equals ? IndentedMixin : IndentedInclude, 1);\n});\n\nconst indentation = new ExternalTokenizer((input, stack) => {\n  if (!stack.dialectEnabled(Dialect_indented)) return\n  let cDepth = stack.context.depth;\n  if (input.next < 0 && cDepth) {\n    input.acceptToken(dedent);\n    return\n  }\n  let prev = input.peek(-1);\n  if (prev == newlineChar) {\n    let depth = 0;\n    while (input.next != newlineChar && space.includes(input.next)) {\n      input.advance();\n      depth++;\n    }\n    if (depth != cDepth &&\n        input.next != newlineChar && !startOfComment(input)) {\n      if (depth < cDepth) input.acceptToken(dedent, -depth);\n      else input.acceptToken(indent);\n    }\n  }\n});\n\nconst identifiers = new ExternalTokenizer((input, stack) => {\n  for (let inside = false, dashes = 0, i = 0;; i++) {\n    let {next} = input;\n    if (isAlpha(next) || next == dash || next == underscore || (inside && isDigit(next))) {\n      if (!inside && (next != dash || i > 0)) inside = true;\n      if (dashes === i && next == dash) dashes++;\n      input.advance();\n    } else if (next == hash && input.peek(1) == braceL) {\n      input.acceptToken(InterpolationStart, 2);\n      break\n    } else {\n      if (inside)\n        input.acceptToken(next == parenL ? callee : dashes == 2 && stack.canShift(VariableName) ? VariableName : identifier);\n      break\n    }\n  }\n});\n\nconst interpolationEnd = new ExternalTokenizer(input => {\n  if (input.next == braceR) {\n    input.advance();\n    while (isAlpha(input.next) || input.next == dash || input.next == underscore || isDigit(input.next))\n      input.advance();\n    if (input.next == hash && input.peek(1) == braceL)\n      input.acceptToken(InterpolationContinue, 2);\n    else\n      input.acceptToken(InterpolationEnd);\n  }\n});\n\nconst descendant = new ExternalTokenizer(input => {\n  if (space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (isAlpha(next) || next == underscore || next == hash || next == period ||\n        next == bracketL || next == colon || next == dash || next == and)\n      input.acceptToken(descendantOp);\n  }\n});\n\nconst unitToken = new ExternalTokenizer(input => {\n  if (!space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (next == percent) { input.advance(); input.acceptToken(Unit); }\n    if (isAlpha(next)) {\n      do { input.advance(); } while (isAlpha(input.next))\n      input.acceptToken(Unit);\n    }\n  }\n});\n\nfunction IndentLevel(parent, depth) {\n  this.parent = parent;\n  this.depth = depth;\n  this.hash = (parent ? parent.hash + parent.hash << 8 : 0) + depth + (depth << 4);\n}\n\nconst topIndent = new IndentLevel(null, 0);\n\nconst trackIndent = new ContextTracker({\n  start: topIndent,\n  shift(context, term, stack, input) {\n    if (term == indent) return new IndentLevel(context, stack.pos - input.pos)\n    if (term == dedent) return context.parent\n    return context\n  },\n  hash(context) { return context.hash }\n});\n\nconst cssHighlighting = styleTags({\n  \"AtKeyword import charset namespace keyframes media supports include mixin use forward extend at-root\": tags.definitionKeyword,\n  \"Keyword selector\": tags.keyword,\n  \"ControlKeyword\": tags.controlKeyword,\n  NamespaceName: tags.namespace,\n  KeyframeName: tags.labelName,\n  TagName: tags.tagName,\n  \"ClassName Suffix\": tags.className,\n  PseudoClassName: tags.constant(tags.className),\n  IdName: tags.labelName,\n  \"FeatureName PropertyName\": tags.propertyName,\n  AttributeName: tags.attributeName,\n  NumberLiteral: tags.number,\n  KeywordQuery: tags.keyword,\n  UnaryQueryOp: tags.operatorKeyword,\n  \"CallTag ValueName\": tags.atom,\n  VariableName: tags.variableName,\n  SassVariableName: tags.special(tags.variableName),\n  Callee: tags.operatorKeyword,\n  Unit: tags.unit,\n  \"UniversalSelector NestingSelector IndentedMixin IndentedInclude\": tags.definitionOperator,\n  MatchOp: tags.compareOperator,\n  \"ChildOp SiblingOp, LogicOp\": tags.logicOperator,\n  BinOp: tags.arithmeticOperator,\n  \"Important Global Default\": tags.modifier,\n  Comment: tags.blockComment,\n  LineComment: tags.lineComment,\n  ColorLiteral: tags.color,\n  \"ParenthesizedContent StringLiteral\": tags.string,\n  \"InterpolationStart InterpolationContinue InterpolationEnd\": tags.meta,\n  \": \\\"...\\\"\": tags.punctuation,\n  \"PseudoOp #\": tags.derefOperator,\n  \"; ,\": tags.separator,\n  \"( )\": tags.paren,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {__proto__:null,not:62, only:62, using:173, as:183, with:187, without:187, hide:201, show:201, from:224, to:226, if:239, through:245, in:251};\nconst spec_callee = {__proto__:null,url:80, \"url-prefix\":80, domain:80, regexp:80, lang:94, \"nth-child\":94, \"nth-last-child\":94, \"nth-of-type\":94, \"nth-last-of-type\":94, dir:94, \"host-context\":94, selector:166};\nconst spec_AtKeyword = {__proto__:null,\"@import\":150, \"@include\":170, \"@mixin\":176, \"@function\":176, \"@use\":180, \"@extend\":190, \"@at-root\":194, \"@forward\":198, \"@media\":204, \"@charset\":208, \"@namespace\":212, \"@keyframes\":218, \"@supports\":230, \"@if\":234, \"@else\":236, \"@for\":242, \"@each\":248, \"@while\":254, \"@debug\":258, \"@warn\":258, \"@error\":258, \"@return\":258};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"KOQ`Q+tOOO#cQ+tOOP#jOpOOOOQ#U'#Ch'#ChO#oQ(pO'#CjOOQ#U'#Ci'#CiO%[Q)QO'#FtO%oQ.jO'#CnO&gQ#dO'#DWO'^Q(pO'#CgO'eQ)OO'#DYO'pQ#dO'#DaO'uQ#dO'#DeOOQ#U'#Ft'#FtO'zQ(pO'#FtO(RQ(nO'#DpO%oQ.jO'#DwO%oQ.jO'#ESO%oQ.jO'#EVO%oQ.jO'#EXO(WQ)OO'#E^O(uQ)OO'#E`O%oQ.jO'#EbO)SQ)OO'#EeO%oQ.jO'#EgO)nQ)OO'#EiO)yQ#dO'#ElO*OQ)OO'#ErO*dQ)OO'#FSOOQ&Z'#Fs'#FsOOQ&Y'#FV'#FVO*nQ(nO'#FVQ`Q+tOOO%oQ.jO'#EtO*yQ(nO'#ExO+OQ)OO'#E{O%oQ.jO'#FOO%oQ.jO'#FQOOQ&Z'#F^'#F^O+WQ+uO'#F|O+eQ(oO'#F|QOQ#SOOP+yO#SO'#FrPOOO)CAg)CAgOOQ#U'#Cm'#CmOOQ#U,59W,59WOOQ#i'#Cp'#CpO%oQ.jO'#CsO,XQ.wO'#CuO.tQ.^O,59YO%oQ.jO'#CzOOQ#S'#DO'#DOO/VQ(nO'#DTOOQ#i'#Fv'#FvO/[Q(nO'#C}OOQ#U'#DX'#DXOOQ#U,59r,59rO&gQ#dO,59rO/aQ)OO,59tO'pQ#dO,59{O'uQ#dO,5:PO(WQ)OO,5:TO(WQ)OO,5:VO(WQ)OO,5:WO(WQ)OO'#F]O/lQ(nO,59RO/wQ+tO'#DnO0OQ#TO'#DnOOQ&Z,59R,59ROOQ#U'#D['#D[OOQ#S'#D_'#D_OOQ#U,59t,59tO0TQ(nO,59tO0YQ(nO,59tOOQ#U'#Dc'#DcOOQ#U,59{,59{OOQ#S'#Dg'#DgO0_Q9`O,5:PO0gQ.jO,5:[O0qQ.jO,5:cO1jQ.jO,5:nO1wQ.YO,5:qO2YQ.jO,5:sOOQ#U'#Cj'#CjO3RQ(pO,5:xO3`Q(pO,5:zOOQ&Z,5:z,5:zO3gQ)OO,5:zO3lQ.jO,5:|OOQ#S'#Dz'#DzO4[Q)OO'#EPO4cQ(nO'#GOO*OQ)OO'#EOO4wQ(nO'#EQOOQ#S'#GP'#GPO/oQ(nO,5;PO2`Q.YO,5;ROOQ#d'#Ek'#EkO*nQ(nO,5;TO4|Q)OO,5;TOOQ#S'#En'#EnO5UQ(nO,5;WO5ZQ(nO,5;^O5fQ(nO,5;nOOQ&Z'#F}'#F}OOQ&Y,5;q,5;qOOQ&Y-E9T-E9TO1wQ.YO,5;`O5tQ)OO,5;dO5yQ)OO'#GRO6RQ)OO,5;gO1wQ.YO,5;jO2`Q.YO,5;lOOQ&Z-E9[-E9[O6WQ(oO,5<hO6lQ+uO'#F`O6WQ(oO,5<hPOO#S'#FU'#FUP7SO#SO,5<^POOO,5<^,5<^O7bQ.YO,59_OOQ#i,59a,59aO%oQ.jO,59cO%oQ.jO,59hO%oQ.jO'#FYO7pQ#WO1G.tOOQ#k1G.t1G.tO7xQ.oO,59fO:bQ! lO,59oO;_Q.jO'#DPOOQ#i,59i,59iOOQ#U1G/^1G/^OOQ#U1G/`1G/`O0TQ(nO1G/`O0YQ(nO1G/`OOQ#U1G/g1G/gO;iQ9`O1G/kO<SQ(pO1G/oO<vQ(pO1G/qO=jQ(pO1G/rO>^Q(pO,5;wOOQ#S-E9Z-E9ZOOQ&Z1G.m1G.mO>kQ(nO,5:YO>pQ+uO,5:YO>wQ)OO'#D`O?OQ.jO'#D^OOQ#U1G/k1G/kO%oQ.jO1G/kO?VQ.kO1G/vOOQ#T1G/v1G/vO*nQ(nO1G/}O@SQ+uO'#F}OOQ&Z1G0Y1G0YO/[Q(nO1G0YOOQ&Z1G0]1G0]OOQ&Z1G0_1G0_O/[Q(nO1G0_OBlQ)OO1G0_OOQ&Z1G0d1G0dOOQ&Z1G0f1G0fOBtQ)OO1G0fOByQ(nO1G0fOCOQ)OO1G0hOOQ&Z1G0h1G0hOC^Q.jO'#FbOCnQ#dO1G0hOCsQ(nO'#DzODOQ(nO,5:gODTQ(nO,5:kO*OQ)OO,5:iOD]Q)OO'#FaODpQ(nO,5<jOERQ(nO,5:jO(WQ)OO,5:lOOQ&Z1G0k1G0kOOQ&Z1G0m1G0mOOQ&Z1G0o1G0oO*nQ(nO1G0oOEjQ)OO'#EoOOQ&Z1G0r1G0rOOQ&Z1G0x1G0xOOQ&Z1G1Y1G1YOExQ+uO1G0zO%oQ.jO1G1OOHbQ)OO'#FfOHmQ)OO,5<mO%oQ.jO1G1ROOQ&Z1G1U1G1UOOQ&Z1G1W1G1WOHuQ(oO1G2SOIZQ+uO,5;zOOQ#T,5;z,5;zOOQ#T-E9^-E9^POO#S-E9S-E9SPOOO1G1x1G1xOOQ#i1G.y1G.yOIqQ.oO1G.}OOQ#i1G/S1G/SOLZQ.^O,5;tOOQ#W-E9W-E9WOOQ#k7+$`7+$`OLlQ(nO1G/ZOLqQ.jO'#FWOM{Q.jO'#FyO! dQ.jO'#FvO! kQ(nO,59kOOQ#U7+$z7+$zOOQ#U7+%V7+%VO%oQ.jO7+%VOOQ&Z1G/t1G/tO! pQ#TO1G/tO! uQ(pO'#F{O!!PQ(nO,59zO!!UQ.jO'#FzO!!`Q(nO,59xO!!eQ.YO7+%VO!!sQ.kO'#F_O%oQ.jO'#F_O!$dQ.kO7+%bOOQ#T7+%b7+%bOOQ&Z7+%i7+%iO5fQ(nO7+%tO*nQ(nO7+%yOOQ#d'#E['#E[O!%WQ)OO7+%yO!%fQ(nO7+&QO*OQ)OO7+&QOOQ#d-E9`-E9`OOQ&Z7+&S7+&SO!%kQ.jO'#GQOOQ#d,5;|,5;|OBoQ(nO7+&SO%oQ.jO1G0ROOQ#S1G0V1G0VOOQ#S1G0T1G0TO!&VQ(nO,5;{OOQ#S-E9_-E9_O!&kQ(pO1G0WOOQ&Z7+&Z7+&ZO!&rQ(vO'#CuO/oQ(nO'#FdO!&}Q)OO,5;ZOOQ&Z,5;Z,5;ZO!']Q+uO7+&fO!)uQ)OO7+&fO!*QQ.jO7+&jOOQ#d,5<Q,5<QOOQ#d-E9d-E9dO1wQ.YO7+&mOOQ#T1G1f1G1fOOQ#i7+$u7+$uOOQ#d-E9U-E9UO!*cQ.jO'#FXO!*pQ(nO,5<eO!*pQ(nO,5<eO%oQ.jO,5<eOOQ#i1G/V1G/VO!*xQ.YO<<HqOOQ&Z7+%`7+%`O!+WQ)OO'#F[O!+bQ(nO,5<gOOQ#U1G/f1G/fO!+jQ.jO'#FZO!+tQ(nO,5<fOOQ#U1G/d1G/dOOQ#U<<Hq<<HqO!+|Q.kO,5;yOOQ#e-E9]-E9]OOQ#T<<H|<<H|OOQ&Z<<I`<<I`OOQ&Z<<Ie<<IeO/[Q(nO<<IeO*OQ)OO<<IlO!-mQ(nO<<IlO!-uQ.jO'#FcO!.YQ)OO,5<lOCOQ)OO<<InO!.kQ.jO7+%mOOQ#S7+%r7+%rOOQ#d,5<O,5<OOOQ#d-E9b-E9bOOQ&Z1G0u1G0uOOQ&Z-E9c-E9cO!)uQ)OO<<JQO%oQ.jO,5<POOQ&Z<<JQ<<JQO%oQ.jO<<JUOOQ&Z<<JX<<JXO!.rQ.jO,5;sO!/PQ.jO,5;sOOQ#S-E9V-E9VO!/WQ(nO1G2PO!/`Q.jO1G2POOQ#UAN>]AN>]O!/jQ(pO,5;vOOQ#S-E9Y-E9YO!/tQ.jO,5;uOOQ#S-E9X-E9XO*nQ(nOAN?PO!0OQ(nOAN?WO/oQ(nOAN?WO!0WQ.jO,5;}OOQ#d-E9a-E9aOCOQ)OOAN?YOOQ&ZAN?YAN?YOOQ#S<<IX<<IXP!0rQ)OO'#FeOOQ&ZAN?lAN?lO1wQ.YO1G1kO1wQ.YOAN?pOOQ#S1G1_1G1_O%oQ.jO1G1_O!0wQ(nO7+'kOOQ&ZG24kG24kO/oQ(nOG24rOOQ&ZG24rG24rOOQ&ZG24tG24tOOQ&Z7+'V7+'VOOQ&ZG25[G25[O!1PQ.jO7+&yOOQ&ZLD*^LD*^\",\n  stateData: \"!1a~O$dOSVOSUOS$bQQ~OS_OTVOWbOXaO_UOc_OtYO}YO!UZO!Y[O!llO!m`O!waO!zbO!|cO#RdO#TeO#VfO#YgO#[hO#^iO#ajO#gkO#iqO#mrO#psO#stO#uuO$`SO$iRO$lWO~O$Z$pP~P`O$bzO~Ot^Xt!eXv^X}^X!U^X!Y^X!^^X!a^X!c^X$^^X$a^X$l^X~Ot$hXv$hX}$hX!U$hX!Y$hX!^$hX!a$hX!c$hX$^$hX$a$hX$l$hX~O$`|O!i$hX$c$hXf$hXe$hX~P$gOS!VOTVO_!VOc!VOf!POh!VOj!VOo!SOx!UO$_!TO$`!OO$k!QO~O$`!XO~Ot![O}![O!U!]O!Y!^O!^!_O!a!aO!c!dO$^!`O$a!eO$l!ZO~Ov!bO~P&lO!P!kO$_!hO$`!gO~O$`!lO~O$`!nO~Ot!pO~P$gOt!pO~OTVO_UOtYO}YO!UZO!Y[O$`!uO$iRO$lWO~Of!yO!c!dO$a!eO~P(WOTVOc#QOf!|Oo#OO!u#PO$`!{O!c$rP$a$rP~Oj#UOx!UO$`#TO~O$`#WO~OTVOc#QOf!|Oo#OO!u#PO$`!{O~O!i$rP$c$rP~P)SO!i#[O$a#[O$c#[O~Oc#`O~Oc#aO#q$uP~O$Z$pX!j$pX$]$pX~P`O!i#[O$a#[O$c#[O$Z$pX!j$pX$]$pX~OU#iOV#iO$a#kO$d#iO~OR#mOPiXQiXliXmiX$liXTiXciXfiXoiX!iiX!uiX$`iX$aiX$ciX!ciX!xiX!}iX#PiX#WiXeiXSiX_iXhiXjiXviXxiX!fiX!giX!hiX$_iX$kiX$ZiXuiX!WiX#eiX#niX!jiX$]iX~OP#rOQ#pOl#nOm#nO$l#oO~Of#tO~Of#uO~O!P#zO$_!hO$`!gO~Ov!bO!c!dO$a!eO~O!j$pP~P`O$[$UO~Of$VO~Of$WO~O!W$XO![$YO~O!c!dO$a!eO~P%oOl#nOm#nO$l#oO!i$rP$a$rP$c$rP~P*OOl#nOm#nO!i#[O$c#[O$l#oO~O!c!dO!x$`O$a$^O~P1XOl#nOm#nO!c!dO$a!eO$l#oO~O!}$dO#P$cO$a#[O~P1XOt![O}![O!U!]O!Y!^O!^!_O!a!aO$^!`O$l!ZO~O!i#[O$a#[O$c#[O~P2gOf$gO~P&lO#P$hO~O!}$lO#W$kO$a#[O~P1XOTVOc#QOf!|Oo#OO!u#PO~O$`$mO~P3yOm$pOv$qO!c$rX$a$rX!i$rX$c$rX~Of$tO~Oj$xOx!UO~O!c$yO~Om$pO!c!dO$a!eO~O!c!dO!i#[O$a$^O$c#[O~O#d%OO~Ov%PO#q$uX~O#q%RO~O!i#[O$a#[O$c#[O$Z$pa!j$pa$]$pa~O!i$SX$Z$SX$a$SX$c$SX!j$SX$]$SX~P`OU#iOV#iO$a%ZO$d#iO~Oe%[Ol#nOm#nO$l#oO~OP%aOQ#pO~Ol#nOm#nO$l#oOPnaQnaTnacnafnaona!ina!una$`na$ana$cna!cna!xna!}na#Pna#WnaenaSna_nahnajnavnaxna!fna!gna!hna$_na$kna$Znauna!Wna#ena#nna!jna$]na~Oj%bOy%bO~OS!VOTVO_!VOf!POh!VOj!VOo!SOx!UO$_!TO$`!OO$k!QO~Oc%eOe$mP~P:jO!W%hO![%iO~Ot![O}![O!U!]O!Y!^O$l!ZO~Ov!]i!^!]i!a!]i!c!]i$^!]i$a!]i!i!]i$c!]if!]ie!]i~P;qOv!_i!^!_i!a!_i!c!_i$^!_i$a!_i!i!_i$c!_if!_ie!_i~P;qOv!`i!^!`i!a!`i!c!`i$^!`i$a!`i!i!`i$c!`if!`ie!`i~P;qOv$Pa!c$Pa$a$Pa~P2gO!j%jO~O$]$pP~P`Oe$oP~P(WOe$nP~P%oOl#nOm#nOv%rO!f%tO!g%tO!h%tO$l#oO!i!di$a!di$c!di$Z!di!j!di$]!di~P%oO$[$UOS$qXT$qXW$qXX$qX_$qXc$qXt$qX}$qX!U$qX!Y$qX!l$qX!m$qX!w$qX!z$qX!|$qX#R$qX#T$qX#V$qX#Y$qX#[$qX#^$qX#a$qX#g$qX#i$qX#m$qX#p$qX#s$qX#u$qX$Z$qX$`$qX$i$qX$l$qX!j$qX!i$qX$a$qX$c$qX$]$qX~O$`!OO$i%xO~O#P%zO~Ot%{O~O!i#[O#W$kO$a#[O$c#[O~O!i$tP#W$tP$a$tP$c$tP~P%oO$`!OO~Oe!nXm!nXt!pX~Ot&RO~Oe&SOm$pO~Ov$TX!c$TX$a$TX!i$TX$c$TX~P*OOv$qO!c$ra$a$ra!i$ra$c$ra~Om$pOv!ra!c!ra$a!ra!i!ra$c!rae!ra~O!j&]O#d&ZO#e&ZO$k&YO~O#j&_OS#hiT#hiW#hiX#hi_#hic#hit#hi}#hi!U#hi!Y#hi!l#hi!m#hi!w#hi!z#hi!|#hi#R#hi#T#hi#V#hi#Y#hi#[#hi#^#hi#a#hi#g#hi#i#hi#m#hi#p#hi#s#hi#u#hi$Z#hi$`#hi$i#hi$l#hi!j#hi!i#hi$a#hi$c#hi$]#hi~Oc&aOv$YX#q$YX~Ov%PO#q$ua~O!i#[O$a#[O$c#[O$Z$pi!j$pi$]$pi~O!i$Sa$Z$Sa$a$Sa$c$Sa!j$Sa$]$Sa~P`O$l#oOPkiQkilkimkiTkickifkioki!iki!uki$`ki$aki$cki!cki!xki!}ki#Pki#WkiekiSki_kihkijkivkixki!fki!gki!hki$_ki$kki$Zkiuki!Wki#eki#nki!jki$]ki~Ol#nOm#nO$l#oOP#|aQ#|a~Oe&eO~Ol#nOm#nO$l#oOS#zXT#zX_#zXc#zXe#zXf#zXh#zXj#zXo#zXu#zXv#zXx#zX$_#zX$`#zX$k#zX~Ou&iOv&gOe$mX~P%oOS$jXT$jX_$jXc$jXe$jXf$jXh$jXj$jXl$jXm$jXo$jXu$jXv$jXx$jX$_$jX$`$jX$k$jX$l$jX~Ot&jO~PNYOe&kO~O$]&mO~Ov&nOe$oX~P2gOe&pO~Ov&qOe$nX~P%oOe&sO~Ol#nOm#nO!W&tO$l#oO~Ol#nOm#nO$l#oOS$RXT$RX_$RXc$RXf$RXh$RXj$RXo$RXv$RXx$RX!f$RX!g$RX!h$RX!i$RX$_$RX$`$RX$a$RX$c$RX$k$RX$Z$RX!j$RX$]$RX~Ov%rO!f&wO!g&wO!h&wO!i!dq$a!dq$c!dq$Z!dq!j!dq$]!dq~P%oO!i#[O#P&zO$a#[O$c#[O~Ot&{O~Ol#nOm#nOv&}O$l#oO!i$tX#W$tX$a$tX$c$tX~Om$pOv$Ta!c$Ta$a$Ta!i$Ta$c$Ta~Oe'RO~P2gOR#mO!ciX$aiX~O!j'UO#d&ZO#e&ZO$k&YO~O#j'WOS#hqT#hqW#hqX#hq_#hqc#hqt#hq}#hq!U#hq!Y#hq!l#hq!m#hq!w#hq!z#hq!|#hq#R#hq#T#hq#V#hq#Y#hq#[#hq#^#hq#a#hq#g#hq#i#hq#m#hq#p#hq#s#hq#u#hq$Z#hq$`#hq$i#hq$l#hq!j#hq!i#hq$a#hq$c#hq$]#hq~O!c!dO#k'XO$a!eO~Ol#nOm#nO#e'ZO#n'ZO$l#oO~Oc'^Oe#{Xv#{X~P:jOv&gOe$ma~Ol#nOm#nO!W'bO$l#oO~Oe$OXv$OX~P(WOv&nOe$oa~Oe#}Xv#}X~P%oOv&qOe$na~Ol#nOm#nO$l#oOS$RaT$Ra_$Rac$Raf$Rah$Raj$Rao$Rav$Rax$Ra!f$Ra!g$Ra!h$Ra!i$Ra$_$Ra$`$Ra$a$Ra$c$Ra$k$Ra$Z$Ra!j$Ra$]$Ra~Oe'iOm$pO~Ov$VX!i$VX#W$VX$a$VX$c$VX~P%oOv&}O!i$ta#W$ta$a$ta$c$ta~Oe'nO~P%oOu'sOe#{av#{a~P%oOt'tO~PNYOv&gOe$mi~Ov&gOe$mi~P%oOe$Oav$Oa~P2gOe#}av#}a~P%oOe'wOm$pO~Ol#nOm#nO$l#oOv$Va!i$Va#W$Va$a$Va$c$Va~O#k'XO~Ov&gOe$mq~Oe#{qv#{q~P%oO$k$ll!al~\",\n  goto: \"9U$vPPPPPPPPPPP$w%R%R%fP%R%y%|P'lPP(oP)lP(oPP(oP(o(o*m+jPPP+vPP%R,y%RP-PP-V-]-c%RP-iP%RP-oP%RP%R%RP-uP/W/jPPPPP$wPP'`'`/t'`'`'`'`P$wPP$wP$wPP/wP$wP$wP$wPP$wP$wP$wP/}$wP0Q0TPP$wP$wPPP$wPP$wPP$wP$wP$wP0W0^0d1S1b1h1n1t1z2W2^2h2n2x3O3U3[PPPPPPPPPPP3b3e3qP4hPP6k6n6q6t6}8Z8d9O9RamOPpw!d#g$U%Vs]OPdepw!_!`!a!b!d#g$U$V$t%V&nsTOPdepw!_!`!a!b!d#g$U$V$t%V&nR}Ub]de!_!`!a!b$V$t&n`^OPpw!d#g$U%V!t!VV`abcfhqtu!P!S!p#n#o#p#u$W$Y$Z$k%O%R%d%i%n%r%s&R&g&j&q&}'Q'X'Z']'a'e't'|e#Qgkl!q!|#O$p$q%{&{!t!VV`abcfhqtu!P!S!p#n#o#p#u$W$Y$Z$k%O%R%d%i%n%r%s&R&g&j&q&}'Q'X'Z']'a'e't'|Q%y$dR&Q$l!u!VV`abcfhqtu!P!S!p#n#o#p#u$W$Y$Z$k%O%R%d%i%n%r%s&R&g&j&q&}'Q'X'Z']'a'e't'|!t!VV`abcfhqtu!P!S!p#n#o#p#u$W$Y$Z$k%O%R%d%i%n%r%s&R&g&j&q&}'Q'X'Z']'a'e't'|T&Z$y&[!u!WV`abcfhqtu!P!S!p#n#o#p#u$W$Y$Z$k%O%R%d%i%n%r%s&R&g&j&q&}'Q'X'Z']'a'e't'|Q#v!WQ%v$`Q%w$cR'g&z!t!VV`abcfhqtu!P!S!p#n#o#p#u$W$Y$Z$k%O%R%d%i%n%r%s&R&g&j&q&}'Q'X'Z']'a'e't'|Q#UiR$x#VQ!YWR#w!ZQ!iYR#x![Q#x!kR%g#zQ!jYR#y![Q#x!jR%g#yQ!mZR#{!]Q!o[R#|!^Q!fXQ!xeQ$S!cQ$[!pQ$_!rQ$a!sQ$f!wQ$u#RQ${#YQ$|#ZQ$}#_Q%S#cQ&x%vQ'S&ZQ'Y&_Q'[&cQ'p'WQ'x'iQ'z'qQ'{'rR'}'wSoOpUxP!d$UQ#fwQ%W#gR&d%Va_OPpw!d#g$U%VR$n!|Q%y$dR'P&QR#ViR#XjR$z#XQ#jzR%Y#jQpOR#^pQ%d#uQ%n$W^&f%d%n'Q']'a'e'|Q'Q&RQ']&gQ'a&jQ'e&qR'|'tQ&h%dU'_&h'`'uQ'`&iR'u'aQ#q!RR%`#qQ&r%nR'f&rQ&o%lR'd&oQ!cXR$R!cUwP!d$US#ew%VR%V#gQ%s$ZR&v%sQ#hxQ%U#fT%X#h%UQ$r!}R&V$rQ$i!zS%|$i'lR'l'PQ'O&OR'k'OQ&[$yR'T&[Q&^$}R'V&^Q%Q#aR&b%QR{QSnOp]vPw!d#g$U%V`XOPpw!d#g$U%VQ!vdQ!weQ#}!_Q$O!`Q$P!aQ$Q!bQ%l$VQ&W$tR'c&nQ!RVQ!q`Q!raQ!sbQ!tcQ!zfQ#ShQ#_qQ#ctQ#duQ#l!PQ#s!SQ$Z!pQ%]#nQ%^#oQ%_#pl%c#u$W%d%n&R&g&j&q'Q']'a'e't'|Q%p$YS%q$Z%sQ&O$kQ&`%OQ&c%RQ&l%iQ&u%rQ'j&}Q'q'XR'r'ZR%f#uR%o$WR%m$VQyPQ$T!dR%k$UQ#]oW#gx#f#h%UQ$_!rQ$b!tQ$e!vQ$j!zQ$v#SQ$w#UQ$|#ZQ%T#dQ%u$]Q%}$iQ&X$xQ&x%vS&y%w%yQ'm'PQ'v'gR'y'lQ#RgQ#ZlR$]!qU!}gl!qQ#YkQ$o!|Q$s#OQ&T$pQ&U$qQ&|%{R'h&{R&P$kR#bs\",\n  nodeNames: \"⚠ InterpolationEnd InterpolationContinue Unit VariableName InterpolationStart LineComment Comment IndentedMixin IndentedInclude StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector SuffixedSelector Suffix Interpolation SassVariableName ValueName ) ( ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp LogicOp UnaryExpression LogicOp NamespacedValue CallExpression Callee ArgList : ... , CallLiteral CallTag ParenthesizedContent ClassSelector ClassName PseudoClassSelector :: PseudoClassName PseudoClassName ArgList PseudoClassName ArgList IdSelector # IdName ] AttributeSelector [ AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp Block { Declaration PropertyName Important Global Default ; } ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery UnaryQuery ParenthesizedQuery SelectorQuery selector IncludeStatement include Keyword MixinStatement mixin UseStatement use Keyword Star Keyword ExtendStatement extend RootStatement at-root ForwardStatement forward Keyword MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList Keyword Keyword SupportsStatement supports IfStatement ControlKeyword ControlKeyword Keyword ForStatement ControlKeyword Keyword EachStatement ControlKeyword Keyword WhileStatement ControlKeyword OutputStatement ControlKeyword AtRule Styles\",\n  maxTerm: 175,\n  context: trackIndent,\n  nodeProps: [\n    [\"openedBy\", 1,\"InterpolationStart\",5,\"InterpolationEnd\",21,\"(\",72,\"{\"],\n    [\"isolate\", -3,6,7,26,\"\"],\n    [\"closedBy\", 22,\")\",65,\"}\"]\n  ],\n  propSources: [cssHighlighting],\n  skippedNodes: [0,6,7,132],\n  repeatNodeCount: 17,\n  tokenData: \"!!]~RyOq#rqr$jrs0jst2^tu8{uv;hvw;ywx<[xy=yyz>[z{>a{|>z|}Cm}!ODO!O!PDm!P!Q;h!Q![FW![!]GR!]!^G}!^!_H`!_!`Hw!`!aI`!a!b#r!b!cJa!c!}#r!}#OKy#O#P#r#P#QL[#Q#RLm#R#T#r#T#UMS#U#c#r#c#dNe#d#o#r#o#pNz#p#qLm#q#r! ]#r#s! n#s;'S#r;'S;=`!!V<%lO#rW#uSOy$Rz;'S$R;'S;=`$d<%lO$RW$WSyWOy$Rz;'S$R;'S;=`$d<%lO$RW$gP;=`<%l$RY$m[Oy$Rz!_$R!_!`%c!`#W$R#W#X%v#X#Z$R#Z#[)Z#[#]$R#]#^,V#^;'S$R;'S;=`$d<%lO$RY%jSyWlQOy$Rz;'S$R;'S;=`$d<%lO$RY%{UyWOy$Rz#X$R#X#Y&_#Y;'S$R;'S;=`$d<%lO$RY&dUyWOy$Rz#Y$R#Y#Z&v#Z;'S$R;'S;=`$d<%lO$RY&{UyWOy$Rz#T$R#T#U'_#U;'S$R;'S;=`$d<%lO$RY'dUyWOy$Rz#i$R#i#j'v#j;'S$R;'S;=`$d<%lO$RY'{UyWOy$Rz#`$R#`#a(_#a;'S$R;'S;=`$d<%lO$RY(dUyWOy$Rz#h$R#h#i(v#i;'S$R;'S;=`$d<%lO$RY(}S!hQyWOy$Rz;'S$R;'S;=`$d<%lO$RY)`UyWOy$Rz#`$R#`#a)r#a;'S$R;'S;=`$d<%lO$RY)wUyWOy$Rz#c$R#c#d*Z#d;'S$R;'S;=`$d<%lO$RY*`UyWOy$Rz#U$R#U#V*r#V;'S$R;'S;=`$d<%lO$RY*wUyWOy$Rz#T$R#T#U+Z#U;'S$R;'S;=`$d<%lO$RY+`UyWOy$Rz#`$R#`#a+r#a;'S$R;'S;=`$d<%lO$RY+yS!gQyWOy$Rz;'S$R;'S;=`$d<%lO$RY,[UyWOy$Rz#a$R#a#b,n#b;'S$R;'S;=`$d<%lO$RY,sUyWOy$Rz#d$R#d#e-V#e;'S$R;'S;=`$d<%lO$RY-[UyWOy$Rz#c$R#c#d-n#d;'S$R;'S;=`$d<%lO$RY-sUyWOy$Rz#f$R#f#g.V#g;'S$R;'S;=`$d<%lO$RY.[UyWOy$Rz#h$R#h#i.n#i;'S$R;'S;=`$d<%lO$RY.sUyWOy$Rz#T$R#T#U/V#U;'S$R;'S;=`$d<%lO$RY/[UyWOy$Rz#b$R#b#c/n#c;'S$R;'S;=`$d<%lO$RY/sUyWOy$Rz#h$R#h#i0V#i;'S$R;'S;=`$d<%lO$RY0^S!fQyWOy$Rz;'S$R;'S;=`$d<%lO$R~0mWOY0jZr0jrs1Vs#O0j#O#P1[#P;'S0j;'S;=`2W<%lO0j~1[Oj~~1_RO;'S0j;'S;=`1h;=`O0j~1kXOY0jZr0jrs1Vs#O0j#O#P1[#P;'S0j;'S;=`2W;=`<%l0j<%lO0j~2ZP;=`<%l0jZ2cY!UPOy$Rz!Q$R!Q![3R![!c$R!c!i3R!i#T$R#T#Z3R#Z;'S$R;'S;=`$d<%lO$RY3WYyWOy$Rz!Q$R!Q![3v![!c$R!c!i3v!i#T$R#T#Z3v#Z;'S$R;'S;=`$d<%lO$RY3{YyWOy$Rz!Q$R!Q![4k![!c$R!c!i4k!i#T$R#T#Z4k#Z;'S$R;'S;=`$d<%lO$RY4rYhQyWOy$Rz!Q$R!Q![5b![!c$R!c!i5b!i#T$R#T#Z5b#Z;'S$R;'S;=`$d<%lO$RY5iYhQyWOy$Rz!Q$R!Q![6X![!c$R!c!i6X!i#T$R#T#Z6X#Z;'S$R;'S;=`$d<%lO$RY6^YyWOy$Rz!Q$R!Q![6|![!c$R!c!i6|!i#T$R#T#Z6|#Z;'S$R;'S;=`$d<%lO$RY7TYhQyWOy$Rz!Q$R!Q![7s![!c$R!c!i7s!i#T$R#T#Z7s#Z;'S$R;'S;=`$d<%lO$RY7xYyWOy$Rz!Q$R!Q![8h![!c$R!c!i8h!i#T$R#T#Z8h#Z;'S$R;'S;=`$d<%lO$RY8oShQyWOy$Rz;'S$R;'S;=`$d<%lO$R_9O`Oy$Rz}$R}!O:Q!O!Q$R!Q![:Q![!_$R!_!`;T!`!c$R!c!}:Q!}#R$R#R#S:Q#S#T$R#T#o:Q#o;'S$R;'S;=`$d<%lO$RZ:X^yWcROy$Rz}$R}!O:Q!O!Q$R!Q![:Q![!c$R!c!}:Q!}#R$R#R#S:Q#S#T$R#T#o:Q#o;'S$R;'S;=`$d<%lO$R[;[S![SyWOy$Rz;'S$R;'S;=`$d<%lO$RY;mSlQOy$Rz;'S$R;'S;=`$d<%lO$RZ<OS_ROy$Rz;'S$R;'S;=`$d<%lO$R~<_WOY<[Zw<[wx1Vx#O<[#O#P<w#P;'S<[;'S;=`=s<%lO<[~<zRO;'S<[;'S;=`=T;=`O<[~=WXOY<[Zw<[wx1Vx#O<[#O#P<w#P;'S<[;'S;=`=s;=`<%l<[<%lO<[~=vP;=`<%l<[Z>OSfROy$Rz;'S$R;'S;=`$d<%lO$R~>aOe~_>hU$iPlQOy$Rz!_$R!_!`;T!`;'S$R;'S;=`$d<%lO$RZ?RWlQ!aPOy$Rz!O$R!O!P?k!P!Q$R!Q![Bp![;'S$R;'S;=`$d<%lO$RZ?pUyWOy$Rz!Q$R!Q![@S![;'S$R;'S;=`$d<%lO$RZ@ZYyW$kROy$Rz!Q$R!Q![@S![!g$R!g!h@y!h#X$R#X#Y@y#Y;'S$R;'S;=`$d<%lO$RZAOYyWOy$Rz{$R{|An|}$R}!OAn!O!Q$R!Q![BV![;'S$R;'S;=`$d<%lO$RZAsUyWOy$Rz!Q$R!Q![BV![;'S$R;'S;=`$d<%lO$RZB^UyW$kROy$Rz!Q$R!Q![BV![;'S$R;'S;=`$d<%lO$RZBw[yW$kROy$Rz!O$R!O!P@S!P!Q$R!Q![Bp![!g$R!g!h@y!h#X$R#X#Y@y#Y;'S$R;'S;=`$d<%lO$RZCrSvROy$Rz;'S$R;'S;=`$d<%lO$RZDTWlQOy$Rz!O$R!O!P?k!P!Q$R!Q![Bp![;'S$R;'S;=`$d<%lO$RZDrW$lROy$Rz!O$R!O!PE[!P!Q$R!Q![@S![;'S$R;'S;=`$d<%lO$RYEaUyWOy$Rz!O$R!O!PEs!P;'S$R;'S;=`$d<%lO$RYEzSuQyWOy$Rz;'S$R;'S;=`$d<%lO$RZF][$kROy$Rz!O$R!O!P@S!P!Q$R!Q![Bp![!g$R!g!h@y!h#X$R#X#Y@y#Y;'S$R;'S;=`$d<%lO$RZGWUtROy$Rz![$R![!]Gj!];'S$R;'S;=`$d<%lO$RXGqS}PyWOy$Rz;'S$R;'S;=`$d<%lO$RZHSS!iROy$Rz;'S$R;'S;=`$d<%lO$RYHeUlQOy$Rz!_$R!_!`%c!`;'S$R;'S;=`$d<%lO$R^H|U![SOy$Rz!_$R!_!`%c!`;'S$R;'S;=`$d<%lO$RZIgV!^PlQOy$Rz!_$R!_!`%c!`!aI|!a;'S$R;'S;=`$d<%lO$RXJTS!^PyWOy$Rz;'S$R;'S;=`$d<%lO$RXJdWOy$Rz!c$R!c!}J|!}#T$R#T#oJ|#o;'S$R;'S;=`$d<%lO$RXKT[!lPyWOy$Rz}$R}!OJ|!O!Q$R!Q![J|![!c$R!c!}J|!}#T$R#T#oJ|#o;'S$R;'S;=`$d<%lO$RXLOS!YPOy$Rz;'S$R;'S;=`$d<%lO$R^LaS!WUOy$Rz;'S$R;'S;=`$d<%lO$R[LpUOy$Rz!_$R!_!`;T!`;'S$R;'S;=`$d<%lO$RZMVUOy$Rz#b$R#b#cMi#c;'S$R;'S;=`$d<%lO$RZMnUyWOy$Rz#W$R#W#XNQ#X;'S$R;'S;=`$d<%lO$RZNXSmRyWOy$Rz;'S$R;'S;=`$d<%lO$RZNhUOy$Rz#f$R#f#gNQ#g;'S$R;'S;=`$d<%lO$RZ! PS!cROy$Rz;'S$R;'S;=`$d<%lO$RZ! bS!jROy$Rz;'S$R;'S;=`$d<%lO$R]! sU!aPOy$Rz!_$R!_!`;T!`;'S$R;'S;=`$d<%lO$RW!!YP;=`<%l#r\",\n  tokenizers: [indentation, descendant, interpolationEnd, unitToken, identifiers, spaces, comments, indentedMixins, 0, 1, 2, 3],\n  topRules: {\"StyleSheet\":[0,10],\"Styles\":[1,131]},\n  dialects: {indented: 0},\n  specialized: [{term: 154, get: (value) => spec_identifier[value] || -1},{term: 153, get: (value) => spec_callee[value] || -1},{term: 74, get: (value) => spec_AtKeyword[value] || -1}],\n  tokenPrec: 2863\n});\n\nexport { parser };\n","import { parser } from '@lezer/sass';\nimport { LRLanguage, foldNodeProp, foldInside, indentNodeProp, continuedIndent, LanguageSupport } from '@codemirror/language';\nimport { defineCSSCompletionSource } from '@codemirror/lang-css';\n\n/**\nA language provider based on the [Lezer Sass\nparser](https://github.com/lezer-parser/sass), extended with\nhighlighting and indentation information.\n*/\nconst sassLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"sass\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/foldNodeProp.add({\n                Block: foldInside,\n                Comment(node, state) {\n                    return { from: node.from + 2, to: state.sliceDoc(node.to - 2, node.to) == \"*/\" ? node.to - 2 : node.to };\n                }\n            }),\n            /*@__PURE__*/indentNodeProp.add({\n                Declaration: /*@__PURE__*/continuedIndent()\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"/*\", close: \"*/\" }, line: \"//\" },\n        indentOnInput: /^\\s*\\}$/,\n        wordChars: \"$-\"\n    }\n});\nconst indentedSassLanguage = /*@__PURE__*/sassLanguage.configure({\n    dialect: \"indented\",\n    props: [\n        /*@__PURE__*/indentNodeProp.add({\n            \"Block RuleSet\": cx => cx.baseIndent + cx.unit\n        }),\n        /*@__PURE__*/foldNodeProp.add({\n            Block: node => ({ from: node.from, to: node.to })\n        })\n    ]\n});\n/**\nProperty, variable, $-variable, and value keyword completion\nsource.\n*/\nconst sassCompletionSource = /*@__PURE__*/defineCSSCompletionSource(node => node.name == \"VariableName\" || node.name == \"SassVariableName\");\n/**\nLanguage support for CSS.\n*/\nfunction sass(config) {\n    return new LanguageSupport((config === null || config === void 0 ? void 0 : config.indented) ? indentedSassLanguage : sassLanguage, sassLanguage.data.of({ autocomplete: sassCompletionSource }));\n}\n\nexport { sass, sassCompletionSource, sassLanguage };\n"],"names":["space","newlineChar","isAlpha","ch","isDigit","startOfComment","input","next","peek","spaces","ExternalTokenizer","stack","dialectEnabled","prev","canShift","acceptToken","includes","advance","length","contextual","comments","indentedComment","off","block","end","indented","indentedMixins","indentation","cDepth","context","depth","identifiers","inside","dashes","i","interpolationEnd","descendant","unitToken","IndentLevel","parent","this","hash","trackIndent","ContextTracker","start","shift","term","pos","cssHighlighting","styleTags","tags","definitionKeyword","keyword","ControlKeyword","controlKeyword","NamespaceName","namespace","KeyframeName","labelName","TagName","tagName","className","PseudoClassName","constant","IdName","propertyName","AttributeName","attributeName","NumberLiteral","number","KeywordQuery","UnaryQueryOp","operatorKeyword","atom","VariableName","variableName","SassVariableName","special","Callee","Unit","unit","definitionOperator","MatchOp","compareOperator","logicOperator","BinOp","arithmeticOperator","modifier","Comment","blockComment","LineComment","lineComment","ColorLiteral","color","string","meta","punctuation","derefOperator","separator","paren","squareBracket","brace","spec_identifier","__proto__","not","only","using","as","with","without","hide","show","from","to","if","through","in","spec_callee","url","domain","regexp","lang","dir","selector","spec_AtKeyword","parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","StyleSheet","Styles","dialects","specialized","get","value","tokenPrec","sassLanguage","LRLanguage","define","name","configure","props","foldNodeProp","add","Block","foldInside","node","state","sliceDoc","indentNodeProp","Declaration","continuedIndent","languageData","commentTokens","open","close","line","indentOnInput","wordChars","indentedSassLanguage","dialect","cx","baseIndent","sassCompletionSource","defineCSSCompletionSource","sass","config","LanguageSupport","data","of","autocomplete"],"mappings":"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"}